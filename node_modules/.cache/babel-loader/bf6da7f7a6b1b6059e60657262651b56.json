{"ast":null,"code":"import _classCallCheck from\"/Users/sarah/Documents/Sarah/Projects/reu/covid19-forecasting-market/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/sarah/Documents/Sarah/Projects/reu/covid19-forecasting-market/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/sarah/Documents/Sarah/Projects/reu/covid19-forecasting-market/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/sarah/Documents/Sarah/Projects/reu/covid19-forecasting-market/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import L from\"leaflet\";import statesData from'./us-states.json';import countriesData from'./countries.json';//import './map.css'\nvar style={width:\"100%\",height:\"600px\"};var mapStyle=function mapStyle(feature){return{weight:2,opacity:1,color:\"white\",dashArray:\"3\",fillOpacity:0.7,fillColor:\"#FFEDA0\"};};var Mapportal=/*#__PURE__*/function(_React$Component){_inherits(Mapportal,_React$Component);var _super=_createSuper(Mapportal);function Mapportal(){var _this;_classCallCheck(this,Mapportal);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.onEachFeature=function(feature,layer){layer.bindTooltip(feature.properties.name.toString(),{noHide:true}).openTooltip();layer.on({mouseover:_this.highlightFeature,mouseout:_this.resetHighlight});layer.on(\"click\",function(e){// this gets the id for each country, and we can use that to redirect to different pages since each \n// json layer has different ids. the states are 1-50, and the countries are their official code\nwindow.alert(layer.feature.id);});};_this.highlightFeature=function(e){var layer=e.target;layer.setStyle({fillColor:\"#FFEDA0\",weight:5,color:\"#666\",dashArray:\"\",fillOpacity:0.7});if(!L.Browser.ie&&!L.Browser.opera&&!L.Browser.edge){layer.bringToFront();}//layer.bringToFront();\n};_this.resetHighlight=function(event){_this.geojson.resetStyle(event.target);_this.countries.resetStyle(event.target);};return _this;}_createClass(Mapportal,[{key:\"componentDidMount\",value:function componentDidMount(){// create map\nthis.map=L.map(\"map\",{center:[37.8,-96],zoom:4,layers:[L.tileLayer(\"https://api.mapbox.com/styles/v1/mapbox/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoicmFjaGVsb21ib2siLCJhIjoiY2tjODZ6c3UzMTh3ZTJyb2JndHN0dXhlOSJ9.h8aubFClamI3kiUsjIgNTg\",{maxZoom:18,attribution:'Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors, <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"http://mapbox.com\">Mapbox</a>',id:\"dark-v10\"})]});this.geojson=L.geoJson(statesData,{style:mapStyle,onEachFeature:this.onEachFeature}).addTo(this.map);this.countries=L.geoJson(countriesData,{style:mapStyle,onEachFeature:this.onEachFeature}).addTo(this.map);var overlay={\"Countries\":this.countries,\"States\":this.geojson};L.control.layers(overlay).addTo(this.map);// add layer\nthis.layer=L.layerGroup().addTo(this.map);}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{id:\"map\",style:style});}}]);return Mapportal;}(React.Component);export default Mapportal;","map":{"version":3,"sources":["/Users/sarah/Documents/Sarah/Projects/reu/covid19-forecasting-market/frontend/src/components/Mapportal/index.js"],"names":["React","L","statesData","countriesData","style","width","height","mapStyle","feature","weight","opacity","color","dashArray","fillOpacity","fillColor","Mapportal","onEachFeature","layer","bindTooltip","properties","name","toString","noHide","openTooltip","on","mouseover","highlightFeature","mouseout","resetHighlight","e","window","alert","id","target","setStyle","Browser","ie","opera","edge","bringToFront","event","geojson","resetStyle","countries","map","center","zoom","layers","tileLayer","maxZoom","attribution","geoJson","addTo","overlay","control","layerGroup","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport L from \"leaflet\";\nimport statesData from './us-states.json';\nimport countriesData from './countries.json';\n//import './map.css'\n\nconst style = {\n  width: \"100%\",\n  height: \"600px\"\n};\n\nconst mapStyle = (feature) => {\n  return ({\n    weight: 2,\n    opacity: 1,\n    color: \"white\",\n    dashArray: \"3\",\n    fillOpacity: 0.7,\n    fillColor: \"#FFEDA0\"\n\n  });\n}\n\nclass Mapportal extends React.Component {\n  componentDidMount() {\n    // create map\n    this.map = L.map(\"map\", {\n      center: [37.8, -96],\n      zoom: 4,\n      layers: [\n        L.tileLayer(\"https://api.mapbox.com/styles/v1/mapbox/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoicmFjaGVsb21ib2siLCJhIjoiY2tjODZ6c3UzMTh3ZTJyb2JndHN0dXhlOSJ9.h8aubFClamI3kiUsjIgNTg\",\n        {\n          maxZoom: 18,\n          attribution:\n            'Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors, <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"http://mapbox.com\">Mapbox</a>',\n          id: \"dark-v10\"\n        })\n      ]\n    });\n\n    this.geojson = L.geoJson(statesData, {\n      style: mapStyle,\n      onEachFeature: this.onEachFeature\n    }).addTo(this.map);\n\n    this.countries = L.geoJson(countriesData, {\n\t\tstyle: mapStyle,\n\t\tonEachFeature: this.onEachFeature\n    }).addTo(this.map);\n    \n    var overlay = {\n\t\t\t\"Countries\": this.countries,\n\t\t\t\"States\" : this.geojson\n\t};\n  L.control.layers(overlay).addTo(this.map);\n\n\n    // add layer\n    this.layer = L.layerGroup().addTo(this.map);\n  }\n  onEachFeature = (feature, layer) => {\n\tlayer.bindTooltip(feature.properties.name.toString(),{noHide:true}).openTooltip();\n    layer.on({\n      mouseover: this.highlightFeature,\n      mouseout: this.resetHighlight\n    });\n    layer.on(\"click\",function(e){\n      // this gets the id for each country, and we can use that to redirect to different pages since each \n      // json layer has different ids. the states are 1-50, and the countries are their official code\n      window.alert(layer.feature.id);\n  });\n  }\n  highlightFeature = (e) => {\n    var layer = e.target;\n\n    layer.setStyle({\n      fillColor: \"#FFEDA0\",\n      weight: 5,\n      color: \"#666\",\n      dashArray: \"\",\n      fillOpacity: 0.7\n    });\n\n    if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {\n      layer.bringToFront();\n    }\n    //layer.bringToFront();\n\n  \n  }\n  resetHighlight = (event) => {\n\tthis.geojson.resetStyle(event.target);\n\tthis.countries.resetStyle(event.target);\n  }\n\n  render() {\n    return <div id=\"map\" style={style} />;\n  }\n}\n\nexport default Mapportal;\n"]},"metadata":{},"sourceType":"module"}