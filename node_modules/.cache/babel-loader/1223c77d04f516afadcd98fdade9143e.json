{"ast":null,"code":"var _jsxFileName = \"/Users/sarah/Documents/Sarah/Projects/reu/covid19-forecasting-market/frontend/src/containers/InteractiveChartContainer/index.js\";\nimport React, { Component } from 'react';\nimport InteractiveChart from '../../components/InteractiveChart';\nimport { cleanConfirmedData, organizeData } from '../../utils/data';\n\nclass InteractiveChartContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      orgs: null,\n      confirmed: null,\n      userPrediction: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('/us-inc-deaths-forecasts').then(res => res.json()).then(data => {\n      const [results, orgs] = organizeData(data);\n      console.log({\n        data: results,\n        orgs\n      });\n      this.setState({\n        data: results,\n        orgs\n      });\n    });\n    fetch('/user-prediction').then(res => res.json()).then(data => {\n      this.setState({\n        userPrediction: data\n      });\n    });\n    fetch('/us-inc-deaths-confirmed').then(res => res.json()).then(data => {\n      console.log(typeof data); //const result = JSON.parse(data);\n\n      this.setState({\n        confirmed: data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, \"done\");\n  }\n\n}\n\nexport default InteractiveChartContainer;","map":{"version":3,"sources":["/Users/sarah/Documents/Sarah/Projects/reu/covid19-forecasting-market/frontend/src/containers/InteractiveChartContainer/index.js"],"names":["React","Component","InteractiveChart","cleanConfirmedData","organizeData","InteractiveChartContainer","constructor","props","state","data","orgs","confirmed","userPrediction","componentDidMount","fetch","then","res","json","results","console","log","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,SAASC,kBAAT,EAA6BC,YAA7B,QAAiD,kBAAjD;;AAEA,MAAMC,yBAAN,SAAwCJ,SAAxC,CAAkD;AAC9CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,IADG;AAETC,MAAAA,IAAI,EAAE,IAFG;AAGTC,MAAAA,SAAS,EAAE,IAHF;AAITC,MAAAA,cAAc,EAAE;AAJP,KAAb;AAMH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,0BAAD,CAAL,CAAkCC,IAAlC,CAAuCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA9C,EAA0DF,IAA1D,CAA+DN,IAAI,IAAI;AACnE,YAAM,CAACS,OAAD,EAAUR,IAAV,IAAkBN,YAAY,CAACK,IAAD,CAApC;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACX,QAAAA,IAAI,EAAES,OAAP;AAAgBR,QAAAA;AAAhB,OAAZ;AACA,WAAKW,QAAL,CAAc;AAAEZ,QAAAA,IAAI,EAAES,OAAR;AAAiBR,QAAAA;AAAjB,OAAd;AACH,KAJD;AAKII,IAAAA,KAAK,CAAC,kBAAD,CAAL,CAA0BC,IAA1B,CAA+BC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAtC,EAAkDF,IAAlD,CAAuDN,IAAI,IAAI;AAC/D,WAAKY,QAAL,CAAc;AAAET,QAAAA,cAAc,EAAEH;AAAlB,OAAd;AACH,KAFG;AAGJK,IAAAA,KAAK,CAAC,0BAAD,CAAL,CAAkCC,IAAlC,CAAuCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA9C,EAA0DF,IAA1D,CAA+DN,IAAI,IAAI;AACnEU,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAOX,IAAnB,EADmE,CAEnE;;AACA,WAAKY,QAAL,CAAc;AAAEV,QAAAA,SAAS,EAAEF;AAAb,OAAd;AACH,KAJD;AAKH;;AACDa,EAAAA,MAAM,GAAG;AACN,wBACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADL;AAGF;;AA9B6C;;AAiClD,eAAejB,yBAAf","sourcesContent":["import React, { Component } from 'react';\nimport InteractiveChart from '../../components/InteractiveChart';\nimport { cleanConfirmedData, organizeData } from '../../utils/data';\n\nclass InteractiveChartContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            orgs: null,\n            confirmed: null,\n            userPrediction: null\n        };\n    }\n\n    componentDidMount() {\n        fetch('/us-inc-deaths-forecasts').then(res => res.json()).then(data => {\n            const [results, orgs] = organizeData(data);\n            console.log({data: results, orgs});\n            this.setState({ data: results, orgs });\n        });\n            fetch('/user-prediction').then(res => res.json()).then(data => {\n            this.setState({ userPrediction: data });\n        });\n        fetch('/us-inc-deaths-confirmed').then(res => res.json()).then(data => {\n            console.log(typeof data)\n            //const result = JSON.parse(data);\n            this.setState({ confirmed: data });\n        });\n    }\n    render() {\n       return (\n            <h1>done</h1>\n        );\n    }\n}\n\nexport default InteractiveChartContainer;"]},"metadata":{},"sourceType":"module"}