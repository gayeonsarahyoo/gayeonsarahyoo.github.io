{"ast":null,"code":"var _jsxFileName = \"/Users/sarah/Documents/Sarah/Projects/reu/covid19-forecasting-market/frontend/src/components/LogIn/index.js\";\nimport React, { Component } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\nimport './Login.css';\nimport { Redirect, Route } from \"react-router\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.isLoggedIn = () => {\n      fetch('/login-status/').then(response => response.json()).then(data => this.setState({\n        loggedinstate: data\n      }));\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      loggedinstate: '',\n      loginStatus: ''\n    };\n  }\n\n  componentDidMount() {//this.isLoggedIn();\n  }\n\n  saveLogin(username, password) {\n    fetch('/login/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"username\": username,\n        \"password\": password\n      })\n    });\n  }\n\n  wasSucess() {\n    fetch('/login/', {\n      method: 'GET'\n    }).then(response => response.json()).then(data => this.setState({\n      loginStatus: data['status']\n    }));\n  }\n\n  handleChange(event) {\n    let name = event.target.name;\n\n    if (name == 'username') {\n      this.setState({\n        username: event.target.value\n      });\n    }\n\n    if (name == 'password') {\n      this.setState({\n        password: event.target.value\n      });\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.saveLogin(this.state.username, this.state.password);\n    this.wasSucess();\n    this.isLoggedIn();\n    console.log(this.state.loginStatus);\n  }\n\n  render() {\n    if (this.state.loginStatus) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 18\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit.bind(this),\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.username,\n      onChange: this.handleChange.bind(this),\n      name: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange.bind(this),\n      name: \"password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/sarah/Documents/Sarah/Projects/reu/covid19-forecasting-market/frontend/src/components/LogIn/index.js"],"names":["React","Component","useHistory","ReactDOM","Redirect","Route","Login","constructor","props","isLoggedIn","fetch","then","response","json","data","setState","loggedinstate","state","username","password","loginStatus","componentDidMount","saveLogin","method","headers","body","JSON","stringify","wasSucess","handleChange","event","name","target","value","handleSubmit","preventDefault","console","log","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\nimport './Login.css';\nimport { Redirect, Route } from \"react-router\";\n\n\nclass Login extends React.Component{\n    constructor(props) {\n        super(props)\n        this.state = { username: '', password: '', loggedinstate: '', loginStatus:'' }\n      }  \n      \n      componentDidMount(){\n        //this.isLoggedIn();\n        \n      }\n\n    saveLogin(username, password) {\n        fetch('/login/',{\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\"username\": username, \"password\": password}),\n        });\n    }\n\n    wasSucess(){\n      fetch('/login/',{ method: 'GET'})\n      .then((response) => response.json())\n      .then((data) => this.setState({loginStatus: data['status']}));\n  }\n    \n\n  isLoggedIn = () => {\n\t\tfetch('/login-status/')\n\t\t.then((response) => response.json())\n\t\t.then((data) => this.setState({loggedinstate: data}));\n\t\t\n}\n\n    handleChange(event) {\n      let name = event.target.name;\n      if (name == 'username'){\n        this.setState({ username: event.target.value})\n      }\n      if (name == 'password'){\n        this.setState({ password: event.target.value})\n      }\n  \n    }\n    \n    handleSubmit(event) {\n        event.preventDefault()\n        this.saveLogin(this.state.username, this.state.password)\n        this.wasSucess();\n        this.isLoggedIn()\n        console.log(this.state.loginStatus)\n        \n        \n      }\n\n\n\n    \n      render() {\n        if (this.state.loginStatus) {\n          return <Redirect to=\"/\" />\n        }\n        return (\n          <form onSubmit={this.handleSubmit.bind(this)} className='form-group'>\n            <h1>Sign In</h1>\n            <label>Username</label>\n            <input\n              type=\"text\"\n              value={this.state.username}\n              onChange={this.handleChange.bind(this)}\n              name='username'\n            /><br></br>\n            <span>Password</span>\n            <input\n              type=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange.bind(this)}\n              name='password'\n              required\n            />\n            \n            <input type=\"submit\" value=\"Submit\" />\n          </form>\n        )\n      }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}