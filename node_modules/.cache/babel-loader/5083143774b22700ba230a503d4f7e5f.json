{"ast":null,"code":"export const cleanConfirmedData = (data, dates) => {\n  var result = {};\n\n  for (var i = 0; i < dates.length; i++) {\n    result[dates[i]] = data[dates[i]];\n  }\n\n  return result;\n};\nexport const organizeData = data => {\n  var orgs = Object.keys(data);\n  var results = [];\n\n  for (var i = 0; i < orgs.length; i++) {\n    var forecast = data[orgs[i]];\n    var dates = forecast.target_end_date;\n    var values = forecast.value;\n    var result = {};\n    dates.forEach((key, i) => result[key] = values[i]);\n    results.push(result);\n  }\n\n  return [results, orgs];\n};\n\nfunction addDays(date, days) {\n  var result = new Date(date);\n  result.setDate(result.getDate() + days);\n  return result;\n}\n\nexport const getDates = () => {\n  var current = new Date(2020, 2, 28);\n  var end = new Date();\n  var dateArray = [];\n\n  while (current <= end) {\n    dateArray.push(new Date(current).toISOString().slice(0, 10));\n    current = addDays(current, 1);\n  }\n\n  return dateArray;\n};\nexport const clamp = (a, b, c) => {\n  return Math.max(a, Math.min(b, c));\n};\nexport const formatValue = value => {\n  return value.toLocaleString(\"en\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n};\nexport const callout = (g, value) => {\n  if (!value) return g.style(\"display\", \"none\");\n  g.style(\"display\", null).style(\"pointer-events\", \"none\").style(\"font\", \"10px sans-serif\");\n  const path = g.selectAll(\"path\").data([null]).join(\"path\").attr(\"fill\", \"white\").attr(\"stroke\", \"black\");\n  const text = g.selectAll(\"text\").data([null]).join(\"text\").call(text => text.selectAll(\"tspan\").data((value + \"\").split(/\\n/)).join(\"tspan\").attr(\"x\", 0).attr(\"y\", (d, i) => `${i * 1.1}em`).style(\"font-weight\", (_, i) => i ? null : \"bold\").text(d => d));\n  const {\n    x,\n    y,\n    width: w,\n    height: h\n  } = text.node().getBBox();\n  text.attr(\"transform\", `translate(${-w / 2},${15 - y})`);\n  path.attr(\"d\", `M${-w / 2 - 10},5H-5l5,-5l5,5H${w / 2 + 10}v${h + 20}h-${w + 20}z`);\n};\nexport const sortDictByDateDescending = data => {\n  var sortedList = [];\n  const sortedDates = Object.keys(data).sort((a, b) => new Date(b) - new Date(a));\n  sortedDates.map(d => {\n    sortedList.push({\n      date: d,\n      prediction: data[d]\n    });\n  });\n  return sortedList;\n};\nexport const getMostRecentPrediction = data => {\n  var sortedList = [];\n  const sortedDates = Object.keys(data).sort((a, b) => new Date(b) - new Date(a));\n  sortedDates.map(d => {\n    sortedList.push({\n      date: d,\n      prediction: data[d]\n    });\n  });\n  return sortedList;\n};","map":{"version":3,"sources":["/Users/sarah/Documents/Sarah/Projects/reu/covid19-forecasting-market/frontend/src/utils/data.js"],"names":["cleanConfirmedData","data","dates","result","i","length","organizeData","orgs","Object","keys","results","forecast","target_end_date","values","value","forEach","key","push","addDays","date","days","Date","setDate","getDate","getDates","current","end","dateArray","toISOString","slice","clamp","a","b","c","Math","max","min","formatValue","toLocaleString","style","currency","callout","g","path","selectAll","join","attr","text","call","split","d","_","x","y","width","w","height","h","node","getBBox","sortDictByDateDescending","sortedList","sortedDates","sort","map","prediction","getMostRecentPrediction"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjD,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCD,IAAAA,MAAM,CAACD,KAAK,CAACE,CAAD,CAAN,CAAN,GAAmBH,IAAI,CAACC,KAAK,CAACE,CAAD,CAAN,CAAvB;AACD;;AACD,SAAOD,MAAP;AACD,CANM;AAQP,OAAO,MAAMG,YAAY,GAAIL,IAAD,IAAU;AACpC,MAAIM,IAAI,GAAGC,MAAM,CAACC,IAAP,CAAYR,IAAZ,CAAX;AACA,MAAIS,OAAO,GAAG,EAAd;;AACA,OAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGG,IAAI,CAACF,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,QAAIO,QAAQ,GAAGV,IAAI,CAACM,IAAI,CAACH,CAAD,CAAL,CAAnB;AACA,QAAIF,KAAK,GAAGS,QAAQ,CAACC,eAArB;AACA,QAAIC,MAAM,GAAGF,QAAQ,CAACG,KAAtB;AAEA,QAAIX,MAAM,GAAG,EAAb;AACAD,IAAAA,KAAK,CAACa,OAAN,CAAc,CAACC,GAAD,EAAMZ,CAAN,KAAYD,MAAM,CAACa,GAAD,CAAN,GAAcH,MAAM,CAACT,CAAD,CAA9C;AACAM,IAAAA,OAAO,CAACO,IAAR,CAAad,MAAb;AACD;;AAED,SAAO,CAACO,OAAD,EAAUH,IAAV,CAAP;AACD,CAdM;;AAiBP,SAASW,OAAT,CAAiBC,IAAjB,EAAuBC,IAAvB,EAA6B;AAC3B,MAAIjB,MAAM,GAAG,IAAIkB,IAAJ,CAASF,IAAT,CAAb;AACAhB,EAAAA,MAAM,CAACmB,OAAP,CAAenB,MAAM,CAACoB,OAAP,KAAmBH,IAAlC;AACA,SAAOjB,MAAP;AACD;;AAGD,OAAO,MAAMqB,QAAQ,GAAG,MAAM;AAC5B,MAAIC,OAAO,GAAG,IAAIJ,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAAd;AACA,MAAIK,GAAG,GAAG,IAAIL,IAAJ,EAAV;AACA,MAAIM,SAAS,GAAG,EAAhB;;AACA,SAAOF,OAAO,IAAIC,GAAlB,EAAuB;AACnBC,IAAAA,SAAS,CAACV,IAAV,CAAe,IAAII,IAAJ,CAASI,OAAT,EAAkBG,WAAlB,GAAgCC,KAAhC,CAAsC,CAAtC,EAAwC,EAAxC,CAAf;AACAJ,IAAAA,OAAO,GAAGP,OAAO,CAACO,OAAD,EAAU,CAAV,CAAjB;AACH;;AACD,SAAOE,SAAP;AACD,CATM;AAWP,OAAO,MAAMG,KAAK,GAAG,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KAAa;AAChC,SAAOC,IAAI,CAACC,GAAL,CAASJ,CAAT,EAAYG,IAAI,CAACE,GAAL,CAASJ,CAAT,EAAYC,CAAZ,CAAZ,CAAP;AACD,CAFM;AAIP,OAAO,MAAMI,WAAW,GAAIvB,KAAD,IAAW;AACpC,SAAOA,KAAK,CAACwB,cAAN,CAAqB,IAArB,EAA2B;AAChCC,IAAAA,KAAK,EAAE,UADyB;AAEhCC,IAAAA,QAAQ,EAAE;AAFsB,GAA3B,CAAP;AAID,CALM;AAMP,OAAO,MAAMC,OAAO,GAAG,CAACC,CAAD,EAAI5B,KAAJ,KAAc;AACnC,MAAI,CAACA,KAAL,EAAY,OAAO4B,CAAC,CAACH,KAAF,CAAQ,SAAR,EAAmB,MAAnB,CAAP;AAEZG,EAAAA,CAAC,CACIH,KADL,CACW,SADX,EACsB,IADtB,EAEKA,KAFL,CAEW,gBAFX,EAE6B,MAF7B,EAGKA,KAHL,CAGW,MAHX,EAGmB,iBAHnB;AAKA,QAAMI,IAAI,GAAGD,CAAC,CAACE,SAAF,CAAY,MAAZ,EACV3C,IADU,CACL,CAAC,IAAD,CADK,EAEV4C,IAFU,CAEL,MAFK,EAGRC,IAHQ,CAGH,MAHG,EAGK,OAHL,EAIRA,IAJQ,CAIH,QAJG,EAIO,OAJP,CAAb;AAMA,QAAMC,IAAI,GAAGL,CAAC,CAACE,SAAF,CAAY,MAAZ,EACV3C,IADU,CACL,CAAC,IAAD,CADK,EAEV4C,IAFU,CAEL,MAFK,EAGVG,IAHU,CAGLD,IAAI,IAAIA,IAAI,CACfH,SADW,CACD,OADC,EAEX3C,IAFW,CAEN,CAACa,KAAK,GAAG,EAAT,EAAamC,KAAb,CAAmB,IAAnB,CAFM,EAGXJ,IAHW,CAGN,OAHM,EAITC,IAJS,CAIJ,GAJI,EAIC,CAJD,EAKTA,IALS,CAKJ,GALI,EAKC,CAACI,CAAD,EAAI9C,CAAJ,KAAW,GAAEA,CAAC,GAAG,GAAI,IALtB,EAMTmC,KANS,CAMH,aANG,EAMY,CAACY,CAAD,EAAI/C,CAAJ,KAAUA,CAAC,GAAG,IAAH,GAAU,MANjC,EAOT2C,IAPS,CAOJG,CAAC,IAAIA,CAPD,CAHH,CAAb;AAYA,QAAM;AAACE,IAAAA,CAAD;AAAIC,IAAAA,CAAJ;AAAOC,IAAAA,KAAK,EAAEC,CAAd;AAAiBC,IAAAA,MAAM,EAAEC;AAAzB,MAA8BV,IAAI,CAACW,IAAL,GAAYC,OAAZ,EAApC;AAEAZ,EAAAA,IAAI,CAACD,IAAL,CAAU,WAAV,EAAwB,aAAY,CAACS,CAAD,GAAK,CAAE,IAAG,KAAKF,CAAE,GAArD;AACAV,EAAAA,IAAI,CAACG,IAAL,CAAU,GAAV,EAAgB,IAAG,CAACS,CAAD,GAAK,CAAL,GAAS,EAAG,kBAAiBA,CAAC,GAAG,CAAJ,GAAQ,EAAG,IAAGE,CAAC,GAAG,EAAG,KAAIF,CAAC,GAAG,EAAG,GAAhF;AACD,CA9BM;AAgCP,OAAO,MAAMK,wBAAwB,GAAI3D,IAAD,IAAU;AAChD,MAAI4D,UAAU,GAAG,EAAjB;AACA,QAAMC,WAAW,GAAGtD,MAAM,CAACC,IAAP,CAAYR,IAAZ,EAAkB8D,IAAlB,CAAuB,CAAChC,CAAD,EAAIC,CAAJ,KAAU,IAAIX,IAAJ,CAASW,CAAT,IAAc,IAAIX,IAAJ,CAASU,CAAT,CAA/C,CAApB;AACA+B,EAAAA,WAAW,CAACE,GAAZ,CAAgBd,CAAC,IAAI;AACnBW,IAAAA,UAAU,CAAC5C,IAAX,CAAgB;AACdE,MAAAA,IAAI,EAAE+B,CADQ;AAEde,MAAAA,UAAU,EAAEhE,IAAI,CAACiD,CAAD;AAFF,KAAhB;AAID,GALD;AAMA,SAAOW,UAAP;AAED,CAXM;AAaP,OAAO,MAAMK,uBAAuB,GAAIjE,IAAD,IAAU;AAC/C,MAAI4D,UAAU,GAAG,EAAjB;AACA,QAAMC,WAAW,GAAGtD,MAAM,CAACC,IAAP,CAAYR,IAAZ,EAAkB8D,IAAlB,CAAuB,CAAChC,CAAD,EAAIC,CAAJ,KAAU,IAAIX,IAAJ,CAASW,CAAT,IAAc,IAAIX,IAAJ,CAASU,CAAT,CAA/C,CAApB;AACA+B,EAAAA,WAAW,CAACE,GAAZ,CAAgBd,CAAC,IAAI;AACnBW,IAAAA,UAAU,CAAC5C,IAAX,CAAgB;AACdE,MAAAA,IAAI,EAAE+B,CADQ;AAEde,MAAAA,UAAU,EAAEhE,IAAI,CAACiD,CAAD;AAFF,KAAhB;AAID,GALD;AAMA,SAAOW,UAAP;AAED,CAXM","sourcesContent":["export const cleanConfirmedData = (data, dates) => {\n  var result = {};\n  for (var i = 0; i < dates.length; i++) {\n    result[dates[i]] = data[dates[i]];\n  }\n  return result;\n};\n\nexport const organizeData = (data) => {\n  var orgs = Object.keys(data);\n  var results = [];\n  for (var i = 0; i < orgs.length; i++) {\n    var forecast = data[orgs[i]];\n    var dates = forecast.target_end_date;\n    var values = forecast.value;\n\n    var result = {};\n    dates.forEach((key, i) => result[key] = values[i]);\n    results.push(result);\n  }\n\n  return [results, orgs];\n}\n\n\nfunction addDays(date, days) {\n  var result = new Date(date);\n  result.setDate(result.getDate() + days);\n  return result;\n}\n\n\nexport const getDates = () => {\n  var current = new Date(2020, 2, 28);\n  var end = new Date();\n  var dateArray = [];\n  while (current <= end) {\n      dateArray.push(new Date(current).toISOString().slice(0,10));\n      current = addDays(current, 1);\n  }\n  return dateArray;\n}\n\nexport const clamp = (a, b, c) => { \n  return Math.max(a, Math.min(b, c)) \n}\n\nexport const formatValue = (value) => {\n  return value.toLocaleString(\"en\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\nexport const callout = (g, value) => {\n  if (!value) return g.style(\"display\", \"none\");\n\n  g\n      .style(\"display\", null)\n      .style(\"pointer-events\", \"none\")\n      .style(\"font\", \"10px sans-serif\");\n\n  const path = g.selectAll(\"path\")\n    .data([null])\n    .join(\"path\")\n      .attr(\"fill\", \"white\")\n      .attr(\"stroke\", \"black\");\n\n  const text = g.selectAll(\"text\")\n    .data([null])\n    .join(\"text\")\n    .call(text => text\n      .selectAll(\"tspan\")\n      .data((value + \"\").split(/\\n/))\n      .join(\"tspan\")\n        .attr(\"x\", 0)\n        .attr(\"y\", (d, i) => `${i * 1.1}em`)\n        .style(\"font-weight\", (_, i) => i ? null : \"bold\")\n        .text(d => d));\n\n  const {x, y, width: w, height: h} = text.node().getBBox();\n\n  text.attr(\"transform\", `translate(${-w / 2},${15 - y})`);\n  path.attr(\"d\", `M${-w / 2 - 10},5H-5l5,-5l5,5H${w / 2 + 10}v${h + 20}h-${w + 20}z`);\n}\n\nexport const sortDictByDateDescending = (data) => {\n  var sortedList = [];\n  const sortedDates = Object.keys(data).sort((a, b) => new Date(b) - new Date(a));\n  sortedDates.map(d => {\n    sortedList.push({\n      date: d,\n      prediction: data[d]\n    })\n  })\n  return sortedList;\n\n}\n\nexport const getMostRecentPrediction = (data) => {\n  var sortedList = [];\n  const sortedDates = Object.keys(data).sort((a, b) => new Date(b) - new Date(a));\n  sortedDates.map(d => {\n    sortedList.push({\n      date: d,\n      prediction: data[d]\n    })\n  })\n  return sortedList;\n\n}"]},"metadata":{},"sourceType":"module"}