{"ast":null,"code":"var _jsxFileName = \"/Users/sarah/Documents/Sarah/Projects/reu/covid19-forecasting-market/frontend/src/components/MarketChart/index.js\";\nimport React from 'react';\nimport Chart from 'chart.js';\n\nclass MarketChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n    this.state = {\n      data: null,\n      orgs: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('/total').then(res => res.json()).then(data => {\n      this.setState({\n        data: Object.values(data),\n        orgs: Object.keys(data)\n      });\n      this.renderChart();\n    });\n  }\n\n  renderChart() {\n    var data = {\n      datasets: [{\n        data: this.state.data\n      }],\n      labels: this.state.orgs\n    };\n    this.myChart = new Chart(this.chartRef.current, {\n      type: 'doughnut',\n      data: data,\n      options: {\n        responsive: true\n      }\n    });\n  }\n\n  render() {\n    const {\n      data,\n      orgs\n    } = this.state;\n    if (!data || !orgs) return 'Loading...';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: this.chartRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default MarketChart;","map":{"version":3,"sources":["/Users/sarah/Documents/Sarah/Projects/reu/covid19-forecasting-market/frontend/src/components/MarketChart/index.js"],"names":["React","Chart","MarketChart","Component","constructor","props","chartRef","createRef","state","data","orgs","componentDidMount","fetch","then","res","json","setState","Object","values","keys","renderChart","datasets","labels","myChart","current","type","options","responsive","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAGA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,QAAL,GAAgBN,KAAK,CAACO,SAAN,EAAhB;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,IADG;AAETC,MAAAA,IAAI,EAAE;AAFG,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,QAAD,CAAL,CAAgBC,IAAhB,CAAqBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA5B,EAAwCF,IAAxC,CAA6CJ,IAAI,IAAI;AACjD,WAAKO,QAAL,CAAc;AAACP,QAAAA,IAAI,EAAEQ,MAAM,CAACC,MAAP,CAAcT,IAAd,CAAP;AAA4BC,QAAAA,IAAI,EAAEO,MAAM,CAACE,IAAP,CAAYV,IAAZ;AAAlC,OAAd;AACA,WAAKW,WAAL;AACH,KAHD;AAIH;;AAEDA,EAAAA,WAAW,GAAG;AACV,QAAIX,IAAI,GAAG;AACPY,MAAAA,QAAQ,EAAE,CAAC;AACPZ,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC;AADV,OAAD,CADH;AAIPa,MAAAA,MAAM,EAAE,KAAKd,KAAL,CAAWE;AAJZ,KAAX;AAOA,SAAKa,OAAL,GAAe,IAAItB,KAAJ,CAAU,KAAKK,QAAL,CAAckB,OAAxB,EAAiC;AAC5CC,MAAAA,IAAI,EAAE,UADsC;AAE5ChB,MAAAA,IAAI,EAAEA,IAFsC;AAG5CiB,MAAAA,OAAO,EAAE;AACLC,QAAAA,UAAU,EAAE;AADP;AAHmC,KAAjC,CAAf;AAOH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEnB,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAiB,KAAKF,KAA5B;AACA,QAAI,CAACC,IAAD,IAAS,CAACC,IAAd,EAAoB,OAAO,YAAP;AAEpB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,GAAG,EAAE,KAAKJ,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AA3CqC;;AA8C1C,eAAeJ,WAAf","sourcesContent":["import React from 'react';\nimport Chart from 'chart.js';\n\n\nclass MarketChart extends React.Component {\n    constructor(props) {\n        super(props);\n        this.chartRef = React.createRef();\n        this.state = {\n            data: null,\n            orgs: null,\n        };\n    }\n\n    componentDidMount() {\n        fetch('/total').then(res => res.json()).then(data => {\n            this.setState({data: Object.values(data), orgs: Object.keys(data)});\n            this.renderChart();\n        });\n    }\n\n    renderChart() {\n        var data = {\n            datasets: [{\n                data: this.state.data\n            }],\n            labels: this.state.orgs\n        };\n\n        this.myChart = new Chart(this.chartRef.current, {\n            type: 'doughnut',\n            data: data,\n            options: {\n                responsive: true\n            }\n        })\n    }\n\n    render() {\n        const { data, orgs } = this.state;\n        if (!data || !orgs) return 'Loading...';\n\n        return (\n            <div>\n                <canvas ref={this.chartRef} />\n            </div>\n        );\n    }\n}\n\nexport default MarketChart;\n"]},"metadata":{},"sourceType":"module"}