{"ast":null,"code":"var _jsxFileName = \"/Users/sarah/Documents/Sarah/Projects/reu/gayeonsarahyoo.github.io/src/components/MarketChart/index.js\";\nimport React from 'react';\nimport Chart from 'chart.js';\n\nclass MarketChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n    this.state = {\n      data: null,\n      orgs: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('/total').then(res => res.json()).then(data => {\n      this.setState({\n        data: Object.values(data),\n        orgs: Object.keys(data)\n      });\n      this.renderChart();\n    });\n  }\n\n  renderChart() {\n    var colors = {\n      'Columbia': 'rgb(172, 204, 230)',\n      'Georgia Tech': 'rgb(179, 163, 105)',\n      'UCLA': 'rgb(39, 116, 174)',\n      'IHME': 'rgb(87, 175, 85)',\n      'Youyang Gu': 'rgb(196, 129, 14)'\n    };\n    var colorArr = [];\n\n    for (var i = 0; i < this.state.orgs.length; i++) {\n      colorArr.push(colors[this.state.orgs[i]]);\n    }\n\n    var data = {\n      datasets: [{\n        data: this.state.data,\n        backgroundColor: colorArr\n      }],\n      labels: this.state.orgs\n    };\n    this.myChart = new Chart(this.chartRef.current, {\n      type: 'doughnut',\n      data: data,\n      options: {\n        responsive: true\n      }\n    });\n  }\n\n  render() {\n    const {\n      data,\n      orgs\n    } = this.state;\n    if (!data || !orgs) return 'Loading...';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chart-container\",\n      style: {\n        position: \"relative\",\n        width: \"80vw\",\n        margin: \"0 10%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: this.chartRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default MarketChart;","map":{"version":3,"sources":["/Users/sarah/Documents/Sarah/Projects/reu/gayeonsarahyoo.github.io/src/components/MarketChart/index.js"],"names":["React","Chart","MarketChart","Component","constructor","props","chartRef","createRef","state","data","orgs","componentDidMount","fetch","then","res","json","setState","Object","values","keys","renderChart","colors","colorArr","i","length","push","datasets","backgroundColor","labels","myChart","current","type","options","responsive","render","position","width","margin"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAGA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,QAAL,GAAgBN,KAAK,CAACO,SAAN,EAAhB;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,IADG;AAETC,MAAAA,IAAI,EAAE;AAFG,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,QAAD,CAAL,CAAgBC,IAAhB,CAAqBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA5B,EAAwCF,IAAxC,CAA6CJ,IAAI,IAAI;AACjD,WAAKO,QAAL,CAAc;AAACP,QAAAA,IAAI,EAAEQ,MAAM,CAACC,MAAP,CAAcT,IAAd,CAAP;AAA4BC,QAAAA,IAAI,EAAEO,MAAM,CAACE,IAAP,CAAYV,IAAZ;AAAlC,OAAd;AACA,WAAKW,WAAL;AACH,KAHD;AAIH;;AAEDA,EAAAA,WAAW,GAAG;AACV,QAAIC,MAAM,GAAG;AACT,kBAAY,oBADH;AAET,sBAAgB,oBAFP;AAGT,cAAQ,mBAHC;AAIT,cAAQ,kBAJC;AAKT,oBAAc;AALL,KAAb;AAOA,QAAIC,QAAQ,GAAG,EAAf;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKf,KAAL,CAAWE,IAAX,CAAgBc,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAC7CD,MAAAA,QAAQ,CAACG,IAAT,CAAcJ,MAAM,CAAC,KAAKb,KAAL,CAAWE,IAAX,CAAgBa,CAAhB,CAAD,CAApB;AACH;;AACD,QAAId,IAAI,GAAG;AACPiB,MAAAA,QAAQ,EAAE,CAAC;AACPjB,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IADV;AAEPkB,QAAAA,eAAe,EAAEL;AAFV,OAAD,CADH;AAKPM,MAAAA,MAAM,EAAE,KAAKpB,KAAL,CAAWE;AALZ,KAAX;AAQA,SAAKmB,OAAL,GAAe,IAAI5B,KAAJ,CAAU,KAAKK,QAAL,CAAcwB,OAAxB,EAAiC;AAC5CC,MAAAA,IAAI,EAAE,UADsC;AAE5CtB,MAAAA,IAAI,EAAEA,IAFsC;AAG5CuB,MAAAA,OAAO,EAAE;AACLC,QAAAA,UAAU,EAAE;AADP;AAHmC,KAAjC,CAAf;AAOH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEzB,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAiB,KAAKF,KAA5B;AACA,QAAI,CAACC,IAAD,IAAS,CAACC,IAAd,EAAoB,OAAO,YAAP;AAEpB,wBACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,KAAK,EAAE;AAACyB,QAAAA,QAAQ,EAAE,UAAX;AAAuBC,QAAAA,KAAK,EAAE,MAA9B;AAAsCC,QAAAA,MAAM,EAAE;AAA9C,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,GAAG,EAAE,KAAK/B,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAvDqC;;AA0D1C,eAAeJ,WAAf","sourcesContent":["import React from 'react';\nimport Chart from 'chart.js';\n\n\nclass MarketChart extends React.Component {\n    constructor(props) {\n        super(props);\n        this.chartRef = React.createRef();\n        this.state = {\n            data: null,\n            orgs: null,\n        };\n    }\n\n    componentDidMount() {\n        fetch('/total').then(res => res.json()).then(data => {\n            this.setState({data: Object.values(data), orgs: Object.keys(data)});\n            this.renderChart();\n        });\n    }\n\n    renderChart() {\n        var colors = {\n            'Columbia': 'rgb(172, 204, 230)',\n            'Georgia Tech': 'rgb(179, 163, 105)',\n            'UCLA': 'rgb(39, 116, 174)',\n            'IHME': 'rgb(87, 175, 85)',\n            'Youyang Gu': 'rgb(196, 129, 14)'\n        };\n        var colorArr = [];\n        for (var i = 0; i < this.state.orgs.length; i++) {\n            colorArr.push(colors[this.state.orgs[i]]);\n        }\n        var data = {\n            datasets: [{\n                data: this.state.data,\n                backgroundColor: colorArr,\n            }],\n            labels: this.state.orgs\n        };\n\n        this.myChart = new Chart(this.chartRef.current, {\n            type: 'doughnut',\n            data: data,\n            options: {\n                responsive: true\n            }\n        })\n    }\n\n    render() {\n        const { data, orgs } = this.state;\n        if (!data || !orgs) return 'Loading...';\n\n        return (\n            <div className=\"chart-container\" style={{position: \"relative\", width: \"80vw\", margin: \"0 10%\"}}>\n                <canvas ref={this.chartRef} />\n            </div>\n        );\n    }\n}\n\nexport default MarketChart;\n"]},"metadata":{},"sourceType":"module"}