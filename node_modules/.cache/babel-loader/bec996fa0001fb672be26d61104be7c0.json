{"ast":null,"code":"import _classCallCheck from\"/Users/sarah/Documents/Sarah/Projects/reu/gayeonsarahyoo.github.io/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/sarah/Documents/Sarah/Projects/reu/gayeonsarahyoo.github.io/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/sarah/Documents/Sarah/Projects/reu/gayeonsarahyoo.github.io/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/sarah/Documents/Sarah/Projects/reu/gayeonsarahyoo.github.io/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import*as d3 from'd3';import'./UserPredictionChart.css';import{getMostRecentPrediction,getAllDataPoints,sortDictByDate,sortStringDates}from'../../utils/data';var UserPredictionChart=/*#__PURE__*/function(_Component){_inherits(UserPredictionChart,_Component);var _super=_createSuper(UserPredictionChart);function UserPredictionChart(props){var _this;_classCallCheck(this,UserPredictionChart);_this=_super.call(this,props);_this.state={category:\"us_daily_deaths\"};_this.chartRef=React.createRef();return _this;}_createClass(UserPredictionChart,[{key:\"componentDidMount\",value:function componentDidMount(){var userStatus=this.props.userStatus;console.log(userStatus);if(userStatus['logged in']){this.renderChart();}else{this.chartRef.current.innerHTML=\"Please log in\";}}},{key:\"renderChart\",value:function renderChart(){var _this$props=this.props,forecast=_this$props.forecast,orgs=_this$props.orgs,userPrediction=_this$props.userPrediction,confirmed=_this$props.confirmed,aggregate=_this$props.aggregate;var predictionData={};//where we will store formatted userPrediction\nvar category=this.state.category;var compiledData=[];//format confirmedData, forecastData, and predictionData into a list of js objects, convert date from string to js date object\nvar confirmedData=Object.keys(confirmed).map(function(key){return{date:d3.timeParse(\"%Y-%m-%d\")(key),value:confirmed[key]};});//store userPrediction in predictionData if it exists; parse dates and store as d3 date objects\nif(Object.keys(userPrediction).length>0){Object.keys(userPrediction).map(function(p){predictionData[p]=userPrediction[p].map(function(d){return{date:d3.timeParse(\"%Y-%m-%d\")(d.date.substring(0,10)),value:d.value,defined:d.defined};});});}predictionData=sortDictByDate(predictionData);console.log(predictionData);//get most recent prediction\nvar dates=sortStringDates(Object.keys(userPrediction));var mostRecentPred=predictionData[dates[dates.length-1]];console.log(mostRecentPred);//push to compiledData\ncompiledData=[confirmedData,mostRecentPred];console.log(dates[0]);console.log(d3.timeFormat(\"%B %d, %Y\")(dates[0]));//IMPORTANT BOUNDARIES// \nvar confirmedStartDate=d3.timeParse(\"%Y-%m-%d\")(\"2020-02-01\");var predEndDate=mostRecentPred[mostRecentPred.length-1].date;var valueMax=5000;/*dateList.map(d => {\n            dates.push({\n                date: d\n            })\n        })*/ /////////////////////////////////////////////////DRAW CHART//////////////////////////////\n//set up margin, width, height of chart\nvar legendWidth=180;var toolTipHeight=50;//to make sure there's room for the tooltip when the value is 0\nvar contextHeight=100;var margin={top:20,right:30,bottom:20,left:60},width=800-margin.left-margin.right,height=400-margin.top-margin.bottom;var svg=d3.select(this.chartRef.current).append(\"svg\").attr(\"width\",width+margin.left+margin.right+legendWidth).attr(\"height\",height+margin.top+margin.bottom+toolTipHeight+contextHeight).append(\"g\").attr(\"transform\",\"translate(\"+margin.left+\",\"+margin.top+\")\");//Create X axis label   \nsvg.append(\"text\").attr(\"x\",width/2).attr(\"y\",height+2*margin.bottom).style(\"text-anchor\",\"middle\").text(\"Date\");//Create Y axis label\nsvg.append(\"text\").attr(\"transform\",\"rotate(-90)\").attr(\"y\",0-margin.left).attr(\"x\",0-height/2).attr(\"dy\",\"1em\").style(\"text-anchor\",\"middle\").text(\"Daily Deaths\");var x=d3.scaleTime().domain([confirmedStartDate,predEndDate]).range([0,width]);var xAxis=svg.append(\"g\").attr(\"transform\",\"translate(0,\"+height+\")\").call(d3.axisBottom(x));var y=d3.scaleLinear().domain([0,valueMax]).range([height,0]);var yAxis=svg.append(\"g\").call(d3.axisLeft(y));//DRAW LEGEND//\nvar legendString=[\"Daily Confirmed Deaths\",\"User Prediction\"];var color=d3.scaleOrdinal().domain(legendString).range(d3.schemeTableau10);var legend=svg.append('g').attr(\"id\",\"legend\");legend.selectAll(\"rect\").data(legendString).enter().append(\"circle\").attr('cx',width+30).attr(\"cy\",function(d,i){return 20+i*25;})// 100 is where the first dot appears. 25 is the distance between dots\n.attr(\"r\",6)//.attr(\"width\", size)\n//.attr(\"height\", size)\n.style(\"fill\",function(d){return color(d);});legend.selectAll(\"labels\").data(legendString).enter().append(\"text\").attr(\"x\",width+45).attr(\"y\",function(d,i){return 20+i*25;})// 100 is where the first dot appears. 25 is the distance between dots\n.style(\"fill\",function(d){return color(d);}).text(function(d){return d;}).attr(\"text-anchor\",\"left\").style(\"alignment-baseline\",\"middle\");//DRAW TODAY LINE//\nvar today=d3.timeParse(\"%Y-%m-%d\")(new Date().toISOString().substring(0,10));console.log(today);var todayMarker=svg.append(\"g\").attr(\"id\",\"today-marker\");todayMarker.append(\"line\").attr(\"id\",\"today-line\").attr(\"x1\",x(today)).attr(\"x2\",x(today)).attr(\"y1\",0).attr(\"y2\",height).attr(\"stroke\",\"black\").attr(\"stroke-width\",1).attr(\"stroke-dasharray\",\"8, 8\");todayMarker.append(\"text\").attr(\"id\",\"today-text\").attr(\"transform\",\"translate(\".concat(x(today)+17,\", 0) rotate(-90)\")).text(\"Today\").style(\"text-anchor\",\"end\");//SET UP CLIP PATH//\nvar mainClip=svg.append(\"defs\").append(\"svg:clipPath\").attr(\"id\",\"main-clip\").append(\"svg:rect\").attr(\"width\",width).attr(\"height\",height).attr(\"x\",0).attr(\"y\",0);var mainArea=svg.append(\"g\").attr(\"clip-path\",\"url(#main-clip)\");//SET UP CURVES//\nvar lineGenerator=d3.line().curve(d3.curveCatmullRom);var predLineGenerator=d3.line().curve(d3.curveBasis);var line=lineGenerator.x(function(d){return x(d.date);}).y(function(d){return y(d.value);});var predLine=predLineGenerator.defined(function(d){return d.defined;}).x(function(d){return x(d.date);}).y(function(d){return y(d.value);});//DRAW CURVES//\nvar confirmedCurve=mainArea.append(\"path\").attr(\"id\",\"confirmed\").attr(\"class\",\"line\").datum(confirmedData).attr(\"d\",line).attr(\"stroke\",color(legendString[0]));var predCurve=mainArea.append(\"path\").attr(\"id\",\"prediction\").attr(\"class\",\"line\").datum(mostRecentPred.filter(predLine.defined())).attr(\"d\",predLine).attr(\"stroke\",color(legendString[1]));//SET UP TOOLTIP//\nvar tooltip=svg.append(\"g\").attr(\"class\",\"tooltip\");tooltip.append(\"path\").attr(\"id\",\"tooltip-line\").style(\"stroke\",\"black\").style(\"stroke-width\",\"0.5px\").style(\"display\",\"none\");var mousePerLine=tooltip.selectAll(\".mouse-per-line\").data(compiledData).enter().append(\"g\").attr(\"class\",\"mouse-per-line\");mousePerLine.append(\"circle\").attr(\"r\",2).style(\"stroke\",function(d,index){return color(legendString[index]);}).attr(\"id\",\"circle\").style(\"fill\",\"none\").style(\"stroke-width\",\"1px\").style(\"display\",\"none\");mousePerLine.append(\"text\").attr(\"id\",\"value\").attr(\"transform\",\"translate(10,3)\");mousePerLine.append(\"text\").attr(\"id\",\"date\").attr(\"text-anchor\",\"end\").attr(\"transform\",\"rotate(-90)\");svg.append(\"svg:rect\").attr('width',width).attr('height',height).attr(\"id\",\"interactive-area\").attr('fill','none').attr('pointer-events','all').style(\"cursor\",\"pointer\").on('mouseout',function(){// on mouse out hide line, circles and text\nd3.select(\"#tooltip-line\").style(\"display\",\"none\");d3.selectAll(\".mouse-per-line circle\").style(\"display\",\"none\");d3.selectAll(\".mouse-per-line text\").style(\"display\",\"none\");})/*.on('mouseover', function() { // on mouse in show line, circles and text\n                        d3.select(\"#tooltip-line\")\n                            .style(\"opacity\", \"1\");\n                        d3.selectAll(\".mouse-per-line circle\")\n                            .style(\"opacity\", \"1\");\n                        d3.selectAll(\".mouse-per-line text\")\n                            .style(\"opacity\", \"1\")\n                    })*/.on('mousemove',function(){// mouse moving over canvas\nvar todayDate=new Date();todayDate=d3.timeParse(\"%Y-%m-%d\")(todayDate.toISOString().substring(0,10));var date=x.invert(d3.mouse(this)[0]);if(+date>+todayDate){date=todayDate;}var index=d3.bisectRight(dates,date);if(predictionData[date]){console.log(\"exists\");svg.select(\"#prediction\").datum(predictionData[date].filter(predLine.defined())).attr(\"d\",predLine);compiledData[1]=predictionData[date];}else{if(index==0){svg.select(\"#prediction\").datum([]).attr(\"d\",predLine);compiledData[1]=[];}else{var newDate=dates[index-1];console.log(+predictionData[newDate][0].date,+date);var pred=predictionData[newDate].filter(function(d){return+d.date>=+date;});console.log(pred);svg.select(\"#prediction\").datum(pred.filter(predLine.defined())).attr(\"d\",predLine);compiledData[1]=pred;}}mousePerLine.data(compiledData);////////////////////\nvar mouse=d3.mouse(this);var xCoord=mouse[0];d3.select(\"#tooltip-line\").attr(\"d\",function(){var d=\"M\"+xCoord+\",\"+height;d+=\" \"+xCoord+\",\"+0;return d;});d3.selectAll(\".mouse-per-line\").attr(\"transform\",function(d,i){if(d.length==0){return;}var date=x.invert(xCoord);var index=d3.bisector(function(f){return f.date;}).left(d,date);var a=null;if(index>0){a=d[index-1];}var b=d[index];//d = the data object corresponding to date and value pointed by the cursors\nvar data=null;if(!a){data=b;}else if(!b){data=a;}else{data=b&&date-a.date>b.date-date?b:a;}if(+d3.timeDay.floor(date)==+data.date||+d3.timeDay.ceil(date)==+data.date){if(data.defined!=0){var element=d3.select(this);element.select('#value').style(\"display\",\"block\").text(Math.round(data.value)).attr(\"transform\",\"translate(\".concat(mouse[0],\", \").concat(y(data.value),\")\"));element.select(\"#date\").style(\"display\",\"block\").attr(\"transform\",\"translate(\".concat(mouse[0]+15,\", 0) rotate(-90)\")).text(d3.timeFormat(\"%B %d, %Y\")(data.date));element.select(\"circle\").style(\"display\",\"block\").attr(\"transform\",\"translate(\".concat(mouse[0],\", \").concat(y(data.value),\")\"));return\"translate(0,0)\";}}var element=d3.select(this);element.selectAll(\"text\").style(\"display\",\"none\");element.select(\"circle\").style(\"display\",\"none\");});}).on(\"click\",function(){var date=x.invert(d3.mouse(this)[0]);var index=d3.bisectRight(dates,date);console.log(dates);console.log(date);console.log(index);if(predictionData[date]){console.log(\"exists\");svg.select(\"#prediction\").datum(predictionData[date].filter(predLine.defined())).attr(\"d\",predLine);compiledData[1]=predictionData[date];}else{if(index==0){svg.select(\"#prediction\").datum([]).attr(\"d\",predLine);compiledData[1]=[];}else{var newDate=dates[index-1];console.log(+predictionData[newDate][0].date,+date);var pred=predictionData[newDate].filter(function(d){return+d.date>=+date;});console.log(pred);svg.select(\"#prediction\").datum(pred.filter(predLine.defined())).attr(\"d\",predLine);compiledData[1]=pred;}}mousePerLine.data(compiledData);});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{ref:this.chartRef});}}]);return UserPredictionChart;}(Component);export default UserPredictionChart;","map":{"version":3,"sources":["/Users/sarah/Documents/Sarah/Projects/reu/gayeonsarahyoo.github.io/src/components/UserPredictionChart/index.js"],"names":["React","Component","d3","getMostRecentPrediction","getAllDataPoints","sortDictByDate","sortStringDates","UserPredictionChart","props","state","category","chartRef","createRef","userStatus","console","log","renderChart","current","innerHTML","forecast","orgs","userPrediction","confirmed","aggregate","predictionData","compiledData","confirmedData","Object","keys","map","key","date","timeParse","value","length","p","d","substring","defined","dates","mostRecentPred","timeFormat","confirmedStartDate","predEndDate","valueMax","legendWidth","toolTipHeight","contextHeight","margin","top","right","bottom","left","width","height","svg","select","append","attr","style","text","x","scaleTime","domain","range","xAxis","call","axisBottom","y","scaleLinear","yAxis","axisLeft","legendString","color","scaleOrdinal","schemeTableau10","legend","selectAll","data","enter","i","today","Date","toISOString","todayMarker","mainClip","mainArea","lineGenerator","line","curve","curveCatmullRom","predLineGenerator","curveBasis","predLine","confirmedCurve","datum","predCurve","filter","tooltip","mousePerLine","index","on","todayDate","invert","mouse","bisectRight","newDate","pred","xCoord","bisector","f","a","b","timeDay","floor","ceil","element","Math","round"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport './UserPredictionChart.css';\nimport { getMostRecentPrediction, getAllDataPoints, sortDictByDate, sortStringDates } from '../../utils/data';\n\nclass UserPredictionChart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { category: \"us_daily_deaths\" };\n        this.chartRef = React.createRef();\n    }\n\n    componentDidMount() {\n        const userStatus = this.props.userStatus;\n        console.log(userStatus)\n        if (userStatus['logged in']) {\n            this.renderChart();\n        }\n        else {\n            this.chartRef.current.innerHTML = \"Please log in\"\n        }\n    }\n    renderChart() {\n        const { forecast, orgs, userPrediction, confirmed, aggregate } = this.props;\n        var predictionData = {};//where we will store formatted userPrediction\n        const category = this.state.category;\n        var compiledData = [];\n\n        //format confirmedData, forecastData, and predictionData into a list of js objects, convert date from string to js date object\n        var confirmedData = Object.keys(confirmed).map(key => ({\n            date: d3.timeParse(\"%Y-%m-%d\")(key),\n            value: confirmed[key]\n        }));\n\n        //store userPrediction in predictionData if it exists; parse dates and store as d3 date objects\n        if(Object.keys(userPrediction).length > 0) {\n            Object.keys(userPrediction).map(p => {\n                predictionData[p]= userPrediction[p].map(d => ({\n                    date: d3.timeParse(\"%Y-%m-%d\")((d.date).substring(0,10)),\n                    value: d.value,\n                    defined: d.defined\n                }))\n            })\n        }\n        predictionData = sortDictByDate(predictionData);\n        console.log(predictionData)\n        //get most recent prediction\n        var dates = sortStringDates(Object.keys(userPrediction))\n        const mostRecentPred = predictionData[dates[dates.length - 1]]\n        console.log(mostRecentPred)\n        //push to compiledData\n        compiledData = [confirmedData, mostRecentPred]\n        console.log(dates[0])\n        console.log(d3.timeFormat(\"%B %d, %Y\")(dates[0]))\n    \n\n        //IMPORTANT BOUNDARIES// \n        const confirmedStartDate = d3.timeParse(\"%Y-%m-%d\")(\"2020-02-01\");\n        const predEndDate = mostRecentPred[mostRecentPred.length - 1].date;\n        const valueMax = 5000;\n        \n\n        /*dateList.map(d => {\n            dates.push({\n                date: d\n            })\n        })*/\n\n        /////////////////////////////////////////////////DRAW CHART//////////////////////////////\n        //set up margin, width, height of chart\n        const legendWidth = 180;\n        const toolTipHeight = 50; //to make sure there's room for the tooltip when the value is 0\n        const contextHeight = 100;\n        var margin = {top: 20, right: 30, bottom: 20, left: 60},\n            width = 800 - margin.left - margin.right,\n            height = 400 - margin.top - margin.bottom;\n        var svg = d3.select(this.chartRef.current)\n                    .append(\"svg\")\n                        .attr(\"width\", width + margin.left + margin.right + legendWidth)\n                        .attr(\"height\", height + margin.top + margin.bottom + toolTipHeight + contextHeight)\n                    .append(\"g\")\n                        .attr(\"transform\",\n                        \"translate(\" + margin.left + \",\" + margin.top + \")\");\n        \n        //Create X axis label   \n        svg.append(\"text\")\n            .attr(\"x\", width/2)\n            .attr(\"y\", height + 2*margin.bottom)\n            .style(\"text-anchor\", \"middle\")\n            .text(\"Date\");\n            \n        //Create Y axis label\n        svg.append(\"text\")\n            .attr(\"transform\", \"rotate(-90)\")\n            .attr(\"y\", 0 - margin.left)\n            .attr(\"x\", 0 - (height/2))\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(\"Daily Deaths\");\n\n        var x = d3\n                    .scaleTime()\n                    .domain([confirmedStartDate, predEndDate])\n                    .range([0, width]);\n        var xAxis = svg\n                        .append(\"g\")\n                        .attr(\"transform\", \"translate(0,\" + height + \")\")\n                        .call(d3.axisBottom(x));\n        var y = d3\n                    .scaleLinear()\n                    .domain([0, valueMax])\n                    .range([height, 0]);\n        var yAxis = svg\n                        .append(\"g\")\n                        .call(d3.axisLeft(y));\n        \n        //DRAW LEGEND//\n        const legendString = [\"Daily Confirmed Deaths\", \"User Prediction\"];\n        const color = d3\n                        .scaleOrdinal()\n                        .domain(legendString)\n                        .range(d3.schemeTableau10);\n        const legend = svg\n                            .append('g')\n                            .attr(\"id\", \"legend\");\n        legend\n                .selectAll(\"rect\")\n                .data(legendString)\n                .enter()\n                .append(\"circle\")\n                    .attr('cx', width + 30)\n                    .attr(\"cy\", function(d,i){ return 20 + i*25}) // 100 is where the first dot appears. 25 is the distance between dots\n                    .attr(\"r\", 6)\n                    //.attr(\"width\", size)\n                    //.attr(\"height\", size)\n                    .style(\"fill\", function(d){ return color(d)})\n        legend\n                .selectAll(\"labels\")\n                .data(legendString)\n                .enter()\n                .append(\"text\")\n                    .attr(\"x\", width + 45)\n                    .attr(\"y\", function(d,i){ return 20 + i*25}) // 100 is where the first dot appears. 25 is the distance between dots\n                    .style(\"fill\", function(d){ return color(d)})\n                    .text(function(d){ return d})\n                        .attr(\"text-anchor\", \"left\")\n                        .style(\"alignment-baseline\", \"middle\")\n        \n        //DRAW TODAY LINE//\n        const today = d3.timeParse(\"%Y-%m-%d\")(new Date().toISOString().substring(0,10));\n        console.log(today);\n        var todayMarker = svg\n                            .append(\"g\")\n                            .attr(\"id\", \"today-marker\")\n        todayMarker\n                    .append(\"line\")\n                    .attr(\"id\", \"today-line\")\n                    .attr(\"x1\", x(today))\n                    .attr(\"x2\", x(today))\n                    .attr(\"y1\", 0)\n                    .attr(\"y2\", height)\n                    .attr(\"stroke\", \"black\")\n                    .attr(\"stroke-width\", 1)\n                    .attr(\"stroke-dasharray\", \"8, 8\")\n        todayMarker\n                    .append(\"text\")\n                    .attr(\"id\", \"today-text\")\n                    .attr(\"transform\", `translate(${x(today) + 17}, 0) rotate(-90)`)\n                    .text(\"Today\")\n                    .style(\"text-anchor\", \"end\")\n\n        //SET UP CLIP PATH//\n        var mainClip = svg\n                            .append(\"defs\")\n                            .append(\"svg:clipPath\")\n                                .attr(\"id\", \"main-clip\")\n                                .append(\"svg:rect\")\n                                    .attr(\"width\", width )\n                                    .attr(\"height\", height )\n                                    .attr(\"x\", 0)\n                                    .attr(\"y\", 0);\n        const mainArea = svg.append(\"g\")\n                            .attr(\"clip-path\", \"url(#main-clip)\");\n        \n        //SET UP CURVES//\n        const lineGenerator = d3.line()\n                                .curve(d3.curveCatmullRom);\n        const predLineGenerator = d3.line()\n                                    .curve(d3.curveBasis);\n        const line = lineGenerator\n                        .x(function(d) { return x(d.date) })\n                        .y(function(d) { return y(d.value) })\n        const predLine = predLineGenerator\n                            .defined(d => d.defined)\n                            .x(function(d) { return x(d.date) })\n                            .y(function(d) { return y(d.value) })\n        //DRAW CURVES//\n        var confirmedCurve = mainArea\n                                    .append(\"path\")\n                                    .attr(\"id\", \"confirmed\")\n                                    .attr(\"class\", \"line\")\n                                    .datum(confirmedData)\n                                    .attr(\"d\", line)\n                                    .attr(\"stroke\", color(legendString[0]))\n        var predCurve = mainArea\n                                .append(\"path\")\n                                .attr(\"id\", \"prediction\")\n                                .attr(\"class\", \"line\")\n                                .datum(mostRecentPred.filter(predLine.defined()))\n                                .attr(\"d\", predLine)\n                                .attr(\"stroke\",  color(legendString[1]))\n        \n        //SET UP TOOLTIP//\n        const tooltip = svg \n                            .append(\"g\")\n                            .attr(\"class\", \"tooltip\")\n        tooltip\n                .append(\"path\")\n                .attr(\"id\", \"tooltip-line\")\n                .style(\"stroke\", \"black\")\n                .style(\"stroke-width\", \"0.5px\")\n                .style(\"display\", \"none\");\n        var mousePerLine = tooltip\n                                    .selectAll(\".mouse-per-line\")\n                                    .data(compiledData)\n                                    .enter()\n                                    .append(\"g\")\n                                    .attr(\"class\", \"mouse-per-line\");\n        mousePerLine.append(\"circle\")\n                    .attr(\"r\", 2)\n                    .style(\"stroke\", function(d, index) {\n                        return color(legendString[index]);\n                    })\n                    .attr(\"id\", \"circle\")\n                    .style(\"fill\", \"none\")\n                    .style(\"stroke-width\", \"1px\")\n                    .style(\"display\", \"none\");\n        mousePerLine.append(\"text\")\n                    .attr(\"id\", \"value\")\n                    .attr(\"transform\", \"translate(10,3)\"); \n        mousePerLine.append(\"text\")\n                    .attr(\"id\", \"date\")\n                    .attr(\"text-anchor\", \"end\")\n                    .attr(\"transform\", \"rotate(-90)\")\n        \n        svg\n                .append(\"svg:rect\")\n                    .attr('width', width)\n                    .attr('height', height)\n                    .attr(\"id\", \"interactive-area\")\n                    .attr('fill', 'none')\n                    .attr('pointer-events', 'all')\n                    .style(\"cursor\", \"pointer\")\n                    .on('mouseout', function() { // on mouse out hide line, circles and text\n                        d3.select(\"#tooltip-line\")\n                            .style(\"display\", \"none\");\n                        d3.selectAll(\".mouse-per-line circle\")\n                            .style(\"display\", \"none\");\n                        d3.selectAll(\".mouse-per-line text\")\n                            .style(\"display\", \"none\")\n                    })\n                    /*.on('mouseover', function() { // on mouse in show line, circles and text\n                        d3.select(\"#tooltip-line\")\n                            .style(\"opacity\", \"1\");\n                        d3.selectAll(\".mouse-per-line circle\")\n                            .style(\"opacity\", \"1\");\n                        d3.selectAll(\".mouse-per-line text\")\n                            .style(\"opacity\", \"1\")\n                    })*/\n                    .on('mousemove', function() { // mouse moving over canvas\n                        var todayDate = new Date();\n                        todayDate = d3.timeParse(\"%Y-%m-%d\")(todayDate.toISOString().substring(0,10));\n                        var date = x.invert(d3.mouse(this)[0])\n                        if (+date > +todayDate) {\n                            date = todayDate;\n                        }\n                        const index = d3.bisectRight(dates, date);\n                        if(predictionData[date]) {\n                            console.log(\"exists\")\n                            svg\n                                .select(\"#prediction\")\n                                .datum(predictionData[date].filter(predLine.defined()))\n                                .attr(\"d\", predLine)\n                            compiledData[1] = predictionData[date];\n                        }\n                        else {\n                            if (index == 0) {\n                                svg\n                                    .select(\"#prediction\")\n                                    .datum([])\n                                    .attr(\"d\", predLine)\n                                compiledData[1] = [];\n                            }\n                            else {\n                                var newDate = dates[index - 1];\n                                console.log(+predictionData[newDate][0].date, +date);\n                                var pred = predictionData[newDate].filter(d => +d.date >= +date)\n                                console.log(pred)\n                                svg\n                                    .select(\"#prediction\")\n                                    .datum(pred.filter(predLine.defined()))\n                                    .attr(\"d\", predLine);\n                                compiledData[1] = pred;\n                            }\n                        }\n                        mousePerLine.data(compiledData);\n                        ////////////////////\n\n\n\n                        var mouse = d3.mouse(this);\n                        var xCoord = mouse[0];\n                        d3\n                            .select(\"#tooltip-line\")\n                            .attr(\"d\", function() {\n                                var d = \"M\" + xCoord + \",\" + height;\n                                d += \" \" + xCoord + \",\" + 0;\n                                return d;\n                            });\n                        d3\n                            .selectAll(\".mouse-per-line\")\n                            .attr(\"transform\", function(d, i) {\n                                if (d.length == 0) {return;}\n                                var date = x.invert(xCoord);\n                                const index = d3.bisector(f => f.date).left(d, date);\n                                var a = null;\n                                if (index > 0) {\n                                    a = d[index - 1];\n                                }\n                                const b = d[index];\n                                //d = the data object corresponding to date and value pointed by the cursors\n                                var data = null;\n                                if (!a) {\n                                    data = b;\n                                }\n                                else if (!b) {\n                                    data = a;\n                                }\n                                else {\n                                    data = b && (date - a.date > b.date - date) ? b : a;\n                                }\n                                if (+d3.timeDay.floor(date) == +data.date || +d3.timeDay.ceil(date) == +data.date) {\n                                    if (data.defined != 0) {\n                                        var element = d3.select(this)\n                                        element\n                                                .select('#value')\n                                                .style(\"display\", \"block\")\n                                                .text(Math.round(data.value))\n                                                .attr(\"transform\", `translate(${mouse[0]}, ${y(data.value)})`);\n                                            \n                                        element\n                                                .select(\"#date\")\n                                                .style(\"display\", \"block\")\n                                                .attr(\"transform\", `translate(${mouse[0] + 15}, 0) rotate(-90)`)\n                                                .text(d3.timeFormat(\"%B %d, %Y\")(data.date));\n                                        element\n                                                .select(\"circle\")\n                                                .style(\"display\", \"block\")\n                                                .attr(\"transform\", `translate(${mouse[0]}, ${y(data.value)})`);\n                                        return \"translate(0,0)\";\n                                    }\n                                }\n                                var element = d3.select(this)\n                                element                \n                                    .selectAll(\"text\")\n                                        .style(\"display\", \"none\")\n                                element\n                                        .select(\"circle\")\n                                        .style(\"display\", \"none\");\n                            });\n                    })\n                    .on(\"click\", function() {\n                        var date = x.invert(d3.mouse(this)[0])\n                        const index = d3.bisectRight(dates, date);\n                        console.log(dates)\n                        console.log(date)\n                        console.log(index)\n                        if(predictionData[date]) {\n                            console.log(\"exists\")\n                            svg\n                                .select(\"#prediction\")\n                                .datum(predictionData[date].filter(predLine.defined()))\n                                .attr(\"d\", predLine)\n                            compiledData[1] = predictionData[date];\n                        }\n                        else {\n                            if (index == 0) {\n                                svg\n                                    .select(\"#prediction\")\n                                    .datum([])\n                                    .attr(\"d\", predLine)\n                                compiledData[1] = [];\n                            }\n                            else {\n                                var newDate = dates[index - 1];\n                                console.log(+predictionData[newDate][0].date, +date);\n                                var pred = predictionData[newDate].filter(d => +d.date >= +date)\n                                console.log(pred)\n                                svg\n                                    .select(\"#prediction\")\n                                    .datum(pred.filter(predLine.defined()))\n                                    .attr(\"d\", predLine);\n                                compiledData[1] = pred;\n                            }\n                        }\n                        mousePerLine.data(compiledData);\n                    })\n                \n    }\n\n    render() {\n        return(<div ref={this.chartRef}></div>);\n    }\n}\n\nexport default UserPredictionChart;\n"]},"metadata":{},"sourceType":"module"}