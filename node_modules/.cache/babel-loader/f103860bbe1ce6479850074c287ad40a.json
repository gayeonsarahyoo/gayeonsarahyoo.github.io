{"ast":null,"code":"export const cleanConfirmedData = (data, dates) => {\n  var result = {};\n\n  for (var i = 0; i < dates.length; i++) {\n    result[dates[i]] = data[dates[i]];\n  }\n\n  return result;\n};\nexport const organizeData = data => {\n  var orgs = Object.keys(data);\n  var results = [];\n\n  for (var i = 0; i < orgs.length; i++) {\n    var forecast = data[orgs[i]];\n    var dates = forecast.target_end_date;\n    var values = forecast.value;\n    var result = {};\n    dates.forEach((key, i) => result[key] = values[i]);\n    results.push(result);\n  }\n\n  return [results, orgs];\n};\n\nfunction addDays(date, days) {\n  var result = new Date(date);\n  result.setDate(result.getDate() + days);\n  return result;\n}\n\nexport const getDates = () => {\n  var current = new Date(2020, 2, 28);\n  var end = new Date();\n  var dateArray = [];\n\n  while (current <= end) {\n    dateArray.push(new Date(current).toISOString().slice(0, 10));\n    current = addDays(current, 1);\n  }\n\n  return dateArray;\n};\nexport const clamp = (a, b, c) => {\n  return Math.max(a, Math.min(b, c));\n};\nexport const bisect = () => {\n  const bisect = d3.bisector(d => d.date).left;\n  return mx => {\n    const date = x.invert(mx);\n    const index = bisect(data, date, 1);\n    const a = data[index - 1];\n    const b = data[index];\n    return b && date - a.date > b.date - date ? b : a;\n  };\n};","map":{"version":3,"sources":["/Users/sarah/Documents/Sarah/Projects/reu/covid19-forecasting-market/frontend/src/utils/data.js"],"names":["cleanConfirmedData","data","dates","result","i","length","organizeData","orgs","Object","keys","results","forecast","target_end_date","values","value","forEach","key","push","addDays","date","days","Date","setDate","getDate","getDates","current","end","dateArray","toISOString","slice","clamp","a","b","c","Math","max","min","bisect","d3","bisector","d","left","mx","x","invert","index"],"mappings":"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","sourcesContent":["export const cleanConfirmedData = (data, dates) => {\n  var result = {};\n  for (var i = 0; i < dates.length; i++) {\n    result[dates[i]] = data[dates[i]];\n  }\n  return result;\n};\n\nexport const organizeData = (data) => {\n  var orgs = Object.keys(data);\n  var results = [];\n  for (var i = 0; i < orgs.length; i++) {\n    var forecast = data[orgs[i]];\n    var dates = forecast.target_end_date;\n    var values = forecast.value;\n\n    var result = {};\n    dates.forEach((key, i) => result[key] = values[i]);\n    results.push(result);\n  }\n\n  return [results, orgs];\n}\n\n\nfunction addDays(date, days) {\n  var result = new Date(date);\n  result.setDate(result.getDate() + days);\n  return result;\n}\n\n\nexport const getDates = () => {\n  var current = new Date(2020, 2, 28);\n  var end = new Date();\n  var dateArray = [];\n  while (current <= end) {\n      dateArray.push(new Date(current).toISOString().slice(0,10));\n      current = addDays(current, 1);\n  }\n  return dateArray;\n}\n\nexport const clamp = (a, b, c) => { \n  return Math.max(a, Math.min(b, c)) \n}\n\nexport const bisect = () => {\n  const bisect = d3.bisector(d => d.date).left;\n  return mx => {\n    const date = x.invert(mx);\n    const index = bisect(data, date, 1);\n    const a = data[index - 1];\n    const b = data[index];\n    return b && (date - a.date > b.date - date) ? b : a;\n  };\n}"]},"metadata":{},"sourceType":"module"}