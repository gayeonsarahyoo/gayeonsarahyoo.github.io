{"ast":null,"code":"var _jsxFileName = \"/Users/sarah/Documents/Sarah/Projects/reu/covid19-forecasting-market/frontend/src/components/InteractiveChart/index.js\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { cleanConfirmedData } from '../../utils/data';\n\nclass InteractiveChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userPrediction: null\n    };\n    this.chartRef = React.createRef();\n  }\n\n  componentDidMount() {\n    console.log(this.props); //this.renderChart();\n  }\n\n  savePrediction(model, data) {\n    fetch('/update/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"model\": model,\n        \"data\": data\n      })\n    });\n  }\n\n  renderChart() {\n    const {\n      forecast,\n      org,\n      userPrediction,\n      confirmed\n    } = this.props;\n    const model = org;\n    const confirmedResult = cleanConfirmedData(confirmed, Object.keys(forecast));\n    const savePrediction = this.savePrediction;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"yes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 16\n      }\n    }, \"hello\");\n  }\n\n}\n\nexport default InteractiveChart;","map":{"version":3,"sources":["/Users/sarah/Documents/Sarah/Projects/reu/covid19-forecasting-market/frontend/src/components/InteractiveChart/index.js"],"names":["React","Component","d3","cleanConfirmedData","InteractiveChart","constructor","props","state","userPrediction","chartRef","createRef","componentDidMount","console","log","savePrediction","model","data","fetch","method","headers","body","JSON","stringify","renderChart","forecast","org","confirmed","confirmedResult","Object","keys","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;AAGA,MAAMC,gBAAN,SAA+BH,SAA/B,CAAyC;AACrCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,cAAc,EAAE;AAAlB,KAAb;AACA,SAAKC,QAAL,GAAgBT,KAAK,CAACU,SAAN,EAAhB;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB,EADgB,CAEhB;AACH;;AAEDQ,EAAAA,cAAc,CAACC,KAAD,EAAQC,IAAR,EAAc;AACxBC,IAAAA,KAAK,CAAC,UAAD,EAAY;AACfC,MAAAA,MAAM,EAAE,MADO;AAEfC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFM;AAKfC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAC,iBAASP,KAAV;AAAiB,gBAAQC;AAAzB,OAAf;AALS,KAAZ,CAAL;AAOH;;AAEDO,EAAAA,WAAW,GAAG;AACV,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,GAAZ;AAAiBjB,MAAAA,cAAjB;AAAiCkB,MAAAA;AAAjC,QAA+C,KAAKpB,KAA1D;AACA,UAAMS,KAAK,GAAGU,GAAd;AACA,UAAME,eAAe,GAAGxB,kBAAkB,CAACuB,SAAD,EAAYE,MAAM,CAACC,IAAP,CAAYL,QAAZ,CAAZ,CAA1C;AACA,UAAMV,cAAc,GAAG,KAAKA,cAA5B;AAGH;;AACDgB,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAK,MAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACH;;AA/BoC;;AAkCzC,eAAe1B,gBAAf","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { cleanConfirmedData } from '../../utils/data';\n\n\nclass InteractiveChart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { userPrediction: null };\n        this.chartRef = React.createRef();\n    }\n    componentDidMount() {\n        console.log(this.props);\n        //this.renderChart();\n    }\n\n    savePrediction(model, data) {\n        fetch('/update/',{\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\"model\": model, \"data\": data}),\n        });\n    }\n\n    renderChart() {\n        const { forecast, org, userPrediction, confirmed } = this.props;\n        const model = org;\n        const confirmedResult = cleanConfirmedData(confirmed, Object.keys(forecast));\n        const savePrediction = this.savePrediction;\n        \n        \n    }\n    render() {\n        return(<div id=\"yes\">hello</div>);\n    }\n}\n\nexport default InteractiveChart;"]},"metadata":{},"sourceType":"module"}