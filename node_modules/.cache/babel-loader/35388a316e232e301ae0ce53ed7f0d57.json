{"ast":null,"code":"var _jsxFileName = \"/Users/sarah/Documents/Sarah/Projects/reu/covid19-forecasting-market/frontend/src/components/LogIn/index.js\";\nimport React, { Component } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\nimport './Login.css';\nimport { Redirect, Route } from \"react-router\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.isLoggedIn = () => {\n      fetch('/login-status/').then(response => response.json()).then(data => {\n        console.log(data);\n        this.setState({\n          loggedinstate: data\n        });\n\n        if (data['logged in']) {\n          window.location.href = '/';\n        } else {//alert(\"Invalid username or password\")\n        }\n      });\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      loggedinstate: ''\n    };\n  }\n\n  componentDidMount() {\n    this.isLoggedIn();\n  }\n\n  saveLogin(username, password) {\n    fetch('/login/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"username\": username,\n        \"password\": password\n      })\n    });\n  }\n\n  wasSucess() {\n    fetch('/login/', {\n      method: 'GET'\n    }).then(function (response) {\n      return response.text();\n    }).then(function (textie) {\n      console.log(textie);\n    });\n  }\n\n  handleChange(event) {\n    let name = event.target.name;\n\n    if (name == 'username') {\n      this.setState({\n        username: event.target.value\n      });\n    }\n\n    if (name == 'password') {\n      this.setState({\n        password: event.target.value\n      });\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.saveLogin(this.state.username, this.state.password);\n    this.wasSucess();\n    this.isLoggedIn();\n    console.log(this.state.loggedinstate['logged in']);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 16\n      }\n    });\n    /*return (\n      <form onSubmit={this.handleSubmit.bind(this)} className='form-group'>\n        <h1>Sign In</h1>\n        <label>Username</label>\n        <input\n          type=\"text\"\n          value={this.state.username}\n          onChange={this.handleChange.bind(this)}\n          name='username'\n        /><br></br>\n        <span>Password</span>\n        <input\n          type=\"password\"\n          value={this.state.password}\n          onChange={this.handleChange.bind(this)}\n          name='password'\n          required\n        />\n        \n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    )*/\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/sarah/Documents/Sarah/Projects/reu/covid19-forecasting-market/frontend/src/components/LogIn/index.js"],"names":["React","Component","useHistory","ReactDOM","Redirect","Route","Login","constructor","props","isLoggedIn","fetch","then","response","json","data","console","log","setState","loggedinstate","window","location","href","state","username","password","componentDidMount","saveLogin","method","headers","body","JSON","stringify","wasSucess","text","textie","handleChange","event","name","target","value","handleSubmit","preventDefault","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\nimport './Login.css';\nimport { Redirect, Route } from \"react-router\";\n\n\nclass Login extends React.Component{\n    constructor(props) {\n        super(props)\n        this.state = { username: '', password: '', loggedinstate: '' }\n      }  \n      \n      componentDidMount(){\n        this.isLoggedIn();\n        \n      }\n\n    saveLogin(username, password) {\n        fetch('/login/',{\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\"username\": username, \"password\": password}),\n        });\n    }\n\n    wasSucess(){\n      fetch('/login/',{ method: 'GET'})\n      .then(function (response) {\n        return response.text();\n    }).then(function (textie) {\n        console.log(textie);\n    });\n  }\n    \n\n  isLoggedIn = () => {\n\t\tfetch('/login-status/')\n\t\t.then((response) => response.json())\n\t\t.then((data) => {\n      console.log(data)\n      this.setState({loggedinstate: data})\n      if(data['logged in']) {\n        window.location.href = '/'\n      }\n      else {\n        //alert(\"Invalid username or password\")\n      }\n    })\n}\n\n    handleChange(event) {\n      let name = event.target.name;\n      if (name == 'username'){\n        this.setState({ username: event.target.value})\n      }\n      if (name == 'password'){\n        this.setState({ password: event.target.value})\n      }\n  \n    }\n    \n    handleSubmit(event) {\n        event.preventDefault()\n        this.saveLogin(this.state.username, this.state.password)\n        this.wasSucess();\n        this.isLoggedIn();\n        console.log(this.state.loggedinstate['logged in'])\n        \n        \n      }\n\n\n\n    \n      render() {\n        return <Redirect to=\"/\" />\n        /*return (\n          <form onSubmit={this.handleSubmit.bind(this)} className='form-group'>\n            <h1>Sign In</h1>\n            <label>Username</label>\n            <input\n              type=\"text\"\n              value={this.state.username}\n              onChange={this.handleChange.bind(this)}\n              name='username'\n            /><br></br>\n            <span>Password</span>\n            <input\n              type=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange.bind(this)}\n              name='password'\n              required\n            />\n            \n            <input type=\"submit\" value=\"Submit\" />\n          </form>\n        )*/\n      }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}