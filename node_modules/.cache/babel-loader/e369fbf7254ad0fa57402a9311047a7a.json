{"ast":null,"code":"var _jsxFileName = \"/Users/sarah/Documents/Sarah/Projects/reu/covid19-forecasting-market/frontend/src/containers/ChartContainer/index.js\";\nimport React from 'react';\nimport LineChart from '../../components/LineChart';\nimport ModelsChart from '../../components/ModelsChart';\nimport { cleanConfirmedData, organizeData } from '../../utils/data';\n/*function LineCharts({ dataSet, orgs, userPrediction, confirmed }) {\n  return dataSet.map((data, index) => {\n    return (\n      <LineChart data={data} org={orgs[index]} userPrediction={userPrediction} confirmed={confirmed} />\n     );\n  })\n}*/\n\nclass ChartContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      orgs: null,\n      confirmed: null //userPrediction: null\n\n    };\n  }\n\n  componentDidMount() {\n    fetch('/us-cum-deaths-forecasts').then(res => res.json()).then(data => {\n      const [results, orgs] = organizeData(data);\n      this.setState({\n        data: results,\n        orgs\n      });\n    });\n    /*fetch('/user-prediction').then(res => res.json()).then(data => {\n      this.setState({ userPrediction: data });\n    });*/\n\n    fetch('/us-cum-deaths-confirmed').then(res => res.json()).then(data => {\n      this.setState({\n        confirmed: data\n      });\n    });\n  }\n\n  render() {\n    //const { data, orgs, userPrediction, confirmed } = this.state;\n    const {\n      data,\n      orgs,\n      confirmed\n    } = this.state; //if (!data || !orgs || !userPrediction || !confirmed) return 'Loading...';\n\n    if (!data || !orgs || !confirmed) return 'Loading...';\n    return (\n      /*#__PURE__*/\n\n      /*\n        <LineCharts\n          dataSet={data}\n          orgs={orgs}\n          userPrediction={userPrediction}\n          confirmed={confirmed}\n        />*/\n      React.createElement(\"div\", {\n        className: \"chartContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ModelsChart, {\n        data: data,\n        orgs: orgs,\n        confirmed: confirmed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }))\n    );\n  }\n\n}\n\nexport default ChartContainer;","map":{"version":3,"sources":["/Users/sarah/Documents/Sarah/Projects/reu/covid19-forecasting-market/frontend/src/containers/ChartContainer/index.js"],"names":["React","LineChart","ModelsChart","cleanConfirmedData","organizeData","ChartContainer","Component","constructor","props","state","data","orgs","confirmed","componentDidMount","fetch","then","res","json","results","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,kBAAT,EAA6BC,YAA7B,QAAiD,kBAAjD;AAEA;;;;;;;;AAQA,MAAMC,cAAN,SAA6BL,KAAK,CAACM,SAAnC,CAA6C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,IADK;AAEXC,MAAAA,IAAI,EAAE,IAFK;AAGXC,MAAAA,SAAS,EAAE,IAHA,CAIX;;AAJW,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,0BAAD,CAAL,CAAkCC,IAAlC,CAAuCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA9C,EAA0DF,IAA1D,CAA+DL,IAAI,IAAI;AACrE,YAAM,CAACQ,OAAD,EAAUP,IAAV,IAAkBP,YAAY,CAACM,IAAD,CAApC;AACA,WAAKS,QAAL,CAAc;AAAET,QAAAA,IAAI,EAAEQ,OAAR;AAAiBP,QAAAA;AAAjB,OAAd;AACD,KAHD;AAIA;;;;AAGAG,IAAAA,KAAK,CAAC,0BAAD,CAAL,CAAkCC,IAAlC,CAAuCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA9C,EAA0DF,IAA1D,CAA+DL,IAAI,IAAI;AACrE,WAAKS,QAAL,CAAc;AAAEP,QAAAA,SAAS,EAAEF;AAAb,OAAd;AACD,KAFD;AAGD;;AAEDU,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAAEV,MAAAA,IAAF;AAAQC,MAAAA,IAAR;AAAcC,MAAAA;AAAd,QAA4B,KAAKH,KAAvC,CAFO,CAIP;;AACA,QAAI,CAACC,IAAD,IAAS,CAACC,IAAV,IAAkB,CAACC,SAAvB,EAAkC,OAAO,YAAP;AAElC;AAAA;;AACE;;;;;;;AAOA;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,WAAD;AACE,QAAA,IAAI,EAAEF,IADR;AAEE,QAAA,IAAI,EAAEC,IAFR;AAGE,QAAA,SAAS,EAAEC,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AARF;AAgBD;;AA/C0C;;AAkD7C,eAAeP,cAAf","sourcesContent":["import React from 'react';\nimport LineChart from '../../components/LineChart';\nimport ModelsChart from '../../components/ModelsChart';\nimport { cleanConfirmedData, organizeData } from '../../utils/data';\n\n/*function LineCharts({ dataSet, orgs, userPrediction, confirmed }) {\n  return dataSet.map((data, index) => {\n    return (\n      <LineChart data={data} org={orgs[index]} userPrediction={userPrediction} confirmed={confirmed} />\n     );\n  })\n}*/\n\nclass ChartContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      orgs: null,\n      confirmed: null,\n      //userPrediction: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('/us-cum-deaths-forecasts').then(res => res.json()).then(data => {\n      const [results, orgs] = organizeData(data);\n      this.setState({ data: results, orgs });\n    });\n    /*fetch('/user-prediction').then(res => res.json()).then(data => {\n      this.setState({ userPrediction: data });\n    });*/\n    fetch('/us-cum-deaths-confirmed').then(res => res.json()).then(data => {\n      this.setState({ confirmed: data });\n    });\n  }\n\n  render() {\n    //const { data, orgs, userPrediction, confirmed } = this.state;\n    const { data, orgs, confirmed } = this.state;\n\n    //if (!data || !orgs || !userPrediction || !confirmed) return 'Loading...';\n    if (!data || !orgs || !confirmed) return 'Loading...';\n\n    return (\n      /*\n        <LineCharts\n          dataSet={data}\n          orgs={orgs}\n          userPrediction={userPrediction}\n          confirmed={confirmed}\n        />*/\n      <div className=\"chartContainer\">\n        <ModelsChart \n          data={data} \n          orgs={orgs}\n          confirmed={confirmed} \n        />\n      </div>\n    );\n  }\n}\n\nexport default ChartContainer;\n"]},"metadata":{},"sourceType":"module"}