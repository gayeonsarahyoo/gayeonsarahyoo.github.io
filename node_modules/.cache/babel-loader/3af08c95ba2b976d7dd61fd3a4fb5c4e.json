{"ast":null,"code":"import _slicedToArray from\"/Users/sarah/Documents/Sarah/Projects/reu/gayeonsarahyoo.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"/Users/sarah/Documents/Sarah/Projects/reu/gayeonsarahyoo.github.io/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/sarah/Documents/Sarah/Projects/reu/gayeonsarahyoo.github.io/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/sarah/Documents/Sarah/Projects/reu/gayeonsarahyoo.github.io/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/sarah/Documents/Sarah/Projects/reu/gayeonsarahyoo.github.io/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import InteractiveChart from'../../components/InteractiveChart';import{cleanConfirmedData,organizeData}from'../../utils/data';/*function InteractiveCharts({ dataSet, orgs, userPrediction, confirmed }) {\n    return dataSet.map((data, index) => {\n      return (\n        <InteractiveChart forecast={data} org={orgs[index]} userPrediction={userPrediction} confirmed={confirmed} />\n       );\n    })\n  }*/var InteractiveChartContainer=/*#__PURE__*/function(_Component){_inherits(InteractiveChartContainer,_Component);var _super=_createSuper(InteractiveChartContainer);function InteractiveChartContainer(props){var _this;_classCallCheck(this,InteractiveChartContainer);_this=_super.call(this,props);_this.state={forecast:null,orgs:null,confirmed:null,userPrediction:null,aggregate:null,loginStatus:null};return _this;}_createClass(InteractiveChartContainer,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;fetch('/us-inc-deaths-forecasts').then(function(res){return res.json();}).then(function(data){var _organizeData=organizeData(data),_organizeData2=_slicedToArray(_organizeData,2),results=_organizeData2[0],orgs=_organizeData2[1];_this2.setState({forecast:results,orgs:orgs});});fetch('/user-prediction?category=us_daily_deaths').then(function(res){return res.json();}).then(function(data){_this2.setState({userPrediction:data});});fetch('/us-inc-deaths-confirmed-wk-avg').then(function(res){return res.json();}).then(function(data){_this2.setState({confirmed:data});});fetch('/us-agg-inc-deaths').then(function(res){return res.json();}).then(function(data){_this2.setState({aggregate:data});console.log(data);});fetch('/login-status/').then(function(res){return res.json();}).then(function(data){_this2.setState({loginStatus:data});});}},{key:\"render\",value:function render(){var _this$state=this.state,forecast=_this$state.forecast,orgs=_this$state.orgs,userPrediction=_this$state.userPrediction,confirmed=_this$state.confirmed,aggregate=_this$state.aggregate,loginStatus=_this$state.loginStatus;if(!forecast||!orgs||!userPrediction||!confirmed||!aggregate||!loginStatus)return'Loading...';return/*#__PURE__*/React.createElement(\"div\",{className:\"chartContainer\"},/*#__PURE__*/React.createElement(InteractiveChart,{forecast:forecast,orgs:orgs,userPrediction:userPrediction,confirmed:confirmed,aggregate:aggregate,loginStatus:loginStatus//userStatus={userStatus}\n}));}}]);return InteractiveChartContainer;}(Component);export default InteractiveChartContainer;","map":{"version":3,"sources":["/Users/sarah/Documents/Sarah/Projects/reu/gayeonsarahyoo.github.io/src/containers/InteractiveChartContainer/index.js"],"names":["React","Component","InteractiveChart","cleanConfirmedData","organizeData","InteractiveChartContainer","props","state","forecast","orgs","confirmed","userPrediction","aggregate","loginStatus","fetch","then","res","json","data","results","setState","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport InteractiveChart from '../../components/InteractiveChart';\nimport { cleanConfirmedData, organizeData } from '../../utils/data';\n\n/*function InteractiveCharts({ dataSet, orgs, userPrediction, confirmed }) {\n    return dataSet.map((data, index) => {\n      return (\n        <InteractiveChart forecast={data} org={orgs[index]} userPrediction={userPrediction} confirmed={confirmed} />\n       );\n    })\n  }*/\n\nclass InteractiveChartContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            forecast: null,\n            orgs: null,\n            confirmed: null,\n            userPrediction: null,\n            aggregate: null,\n            loginStatus: null\n        };\n    }\n\n    componentDidMount() {\n        fetch('/us-inc-deaths-forecasts').then(res => res.json()).then(data => {\n            const [results, orgs] = organizeData(data);\n            this.setState({ forecast: results, orgs });\n        });\n        fetch('/user-prediction?category=us_daily_deaths').then(res => res.json()).then(data => {\n            this.setState({ userPrediction: data });\n        });\n        fetch('/us-inc-deaths-confirmed-wk-avg').then(res => res.json()).then(data => {\n            this.setState({ confirmed: data });\n        });\n        fetch('/us-agg-inc-deaths').then(res => res.json()).then(data => {\n            this.setState({ aggregate: data });\n            console.log(data);\n        });\n        fetch('/login-status/').then(res => res.json()).then(data => {\n            this.setState({ loginStatus: data });\n        });\n    }\n    render() {\n        const { forecast, orgs, userPrediction, confirmed, aggregate, loginStatus } = this.state;\n        if (!forecast || !orgs || !userPrediction || !confirmed || !aggregate || !loginStatus) return 'Loading...';\n\n        return (\n            <div className=\"chartContainer\">\n                <InteractiveChart\n                    forecast={forecast}\n                    orgs={orgs}\n                    userPrediction={userPrediction}\n                    confirmed={confirmed}\n                    aggregate={aggregate}\n                    loginStatus={loginStatus}\n                    //userStatus={userStatus}\n                />\n            </div>\n        );\n    }\n}\n\nexport default InteractiveChartContainer;"]},"metadata":{},"sourceType":"module"}