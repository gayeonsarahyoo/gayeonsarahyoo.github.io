{"ast":null,"code":"import*as d3 from'd3';export var cleanConfirmedData=function cleanConfirmedData(data,dates){var result={};for(var i=0;i<dates.length;i++){result[dates[i]]=data[dates[i]];}return result;};export var organizeData=function organizeData(data){var orgs=Object.keys(data);var results=[];for(var i=0;i<orgs.length;i++){var forecast=data[orgs[i]];var dates=forecast.target_end_date;var values=forecast.value;var result={};dates.forEach(function(key,i){return result[key]=values[i];});results.push(result);}return[results,orgs];};function addDays(date,days){var result=new Date(date);result.setDate(result.getDate()+days);return result;}export var getDates=function getDates(){var current=new Date(2020,2,28);var end=new Date();var dateArray=[];while(current<=end){dateArray.push(new Date(current).toISOString().slice(0,10));current=addDays(current,1);}return dateArray;};export var clamp=function clamp(a,b,c){return Math.max(a,Math.min(b,c));};export var formatValue=function formatValue(value){return value.toLocaleString(\"en\",{style:\"currency\",currency:\"USD\"});};export var callout=function callout(g,value){if(!value)return g.style(\"display\",\"none\");g.style(\"display\",null).style(\"pointer-events\",\"none\").style(\"font\",\"10px sans-serif\");var path=g.selectAll(\"path\").data([null]).join(\"path\").attr(\"fill\",\"white\").attr(\"stroke\",\"black\");var text=g.selectAll(\"text\").data([null]).join(\"text\").call(function(text){return text.selectAll(\"tspan\").data((value+\"\").split(/\\n/)).join(\"tspan\").attr(\"x\",0).attr(\"y\",function(d,i){return\"\".concat(i*1.1,\"em\");}).style(\"font-weight\",function(_,i){return i?null:\"bold\";}).text(function(d){return d;});});var _text$node$getBBox=text.node().getBBox(),x=_text$node$getBBox.x,y=_text$node$getBBox.y,w=_text$node$getBBox.width,h=_text$node$getBBox.height;text.attr(\"transform\",\"translate(\".concat(-w/2,\",\").concat(15-y,\")\"));path.attr(\"d\",\"M\".concat(-w/2-10,\",5H-5l5,-5l5,5H\").concat(w/2+10,\"v\").concat(h+20,\"h-\").concat(w+20,\"z\"));};export var sortDictByDate=function sortDictByDate(data){var sortedDict={};var sortedDates=Object.keys(data).sort(function(a,b){return new Date(a)-new Date(b);});sortedDates.map(function(d){var dateObj=d3.timeParse(\"%Y-%m-%d\")(d);sortedDict[dateObj]=data[d];});return sortedDict;};//pass in list of string dates, return string dates y-m-d\nexport var sortStringDates=function sortStringDates(data){var sortedDates=data.sort(function(a,b){return new Date(a)-new Date(b);});sortedDates=sortedDates.map(function(d){return d3.timeParse(\"%Y-%m-%d\")(d);});return sortedDates;};export var getMostRecentPrediction=function getMostRecentPrediction(data){var sortedDates=Object.keys(data).sort(function(a,b){return new Date(b)-new Date(a);});var mostRecentDate=sortedDates[0];return data[mostRecentDate];};export var reformatData=function reformatData(data){return Object.keys(data).map(function(key){return{date:d3.timeParse(\"%Y-%m-%d\")(key),value:data[key]};});};export var reformatPredData=function reformatPredData(data){return data.map(function(d){return{date:d3.timeParse(\"%Y-%m-%d\")(d.date.substring(0,10)),value:d.value,defined:d.defined};});};//returns y coordinate at given x \n/*export const findYatX = (x, path) => {\n  if (x > path.getTotalLength()) {return null}\n  const getXY = (len) => {\n      var point = path.getPointAtLength(len);\n      return [point.x, point.y];\n  }\n  var start = 0;\n  var end = path.getTotalLength();\n  var result = 0;\n  while (start < end) { \n    var mid = (start + end) / 2;\n    var currPoint = getXY(mid);\n    var currPointX = currPoint[0];\n    if (x < currPointX) {\n      end = mid - 0.01; //does it have to be 0.01?\n    }\n    else if (x > currPointX) {\n      start = mid + 0.01;\n    }\n    else {\n      console.log(currPointX);\n      result = currPoint[1];\n      break;\n    }\n  }\n  if (result == 0) {\n    console.log(start, end);\n    return getXY(start)[1];\n  }\n  return result;\n}*/export var findYatX=function findYatX(x,path,startX){var getXY=function getXY(len){var point=path.getPointAtLength(len);return[point.x,point.y,len];};var start=startX;var end=path.getTotalLength();var result=0;while(start<end){var mid=(start+end)/2;var currPoint=getXY(mid);var currPointX=currPoint[0];if(x<currPointX){end=mid-0.001;//does it have to be 0.01?\n}else if(x>currPointX){start=mid+0.001;}else{result=currPoint;break;}}if(result==0){result=getXY(start);}return result;};//for confirmedData, forecastData, aggregateData\nexport var getAllDataPoints=function getAllDataPoints(pathNode,xAxis,yAxis,startDate,endDate){var data=[];var date=startDate;var startX=0;while(+date<=+endDate){var x=xAxis(date);var point=findYatX(x,pathNode,startX);data.push({date:date,value:yAxis.invert(point[1])});startX=point[2];date=d3.timeDay.offset(date,1);}return data;};export var getDataPointsFromPath=function getDataPointsFromPath(predictionData,pathNode,xAxis,yAxis,lastPredDate){var date=predictionData[0].date;var startX=0;for(var i=0;i<predictionData.length;i++){if(+predictionData[i].date>+lastPredDate){break;}if(predictionData[i].defined==0){date=predictionData[i].date;var point=findYatX(xAxis(date),pathNode,startX);predictionData[i].defined=true;predictionData[i].value=yAxis.invert(point[1]);startX=point[2];}}return predictionData;};","map":{"version":3,"sources":["/Users/sarah/Documents/Sarah/Projects/reu/covid19-forecasting-market/frontend/src/utils/data.js"],"names":["d3","cleanConfirmedData","data","dates","result","i","length","organizeData","orgs","Object","keys","results","forecast","target_end_date","values","value","forEach","key","push","addDays","date","days","Date","setDate","getDate","getDates","current","end","dateArray","toISOString","slice","clamp","a","b","c","Math","max","min","formatValue","toLocaleString","style","currency","callout","g","path","selectAll","join","attr","text","call","split","d","_","node","getBBox","x","y","w","width","h","height","sortDictByDate","sortedDict","sortedDates","sort","map","dateObj","timeParse","sortStringDates","getMostRecentPrediction","mostRecentDate","reformatData","reformatPredData","substring","defined","findYatX","startX","getXY","len","point","getPointAtLength","start","getTotalLength","mid","currPoint","currPointX","getAllDataPoints","pathNode","xAxis","yAxis","startDate","endDate","invert","timeDay","offset","getDataPointsFromPath","predictionData","lastPredDate"],"mappings":"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","sourcesContent":["import * as d3 from 'd3'\n\nexport const cleanConfirmedData = (data, dates) => {\n  var result = {};\n  for (var i = 0; i < dates.length; i++) {\n    result[dates[i]] = data[dates[i]];\n  }\n  return result;\n};\n\nexport const organizeData = (data) => {\n  var orgs = Object.keys(data);\n  var results = [];\n  for (var i = 0; i < orgs.length; i++) {\n    var forecast = data[orgs[i]];\n    var dates = forecast.target_end_date;\n    var values = forecast.value;\n\n    var result = {};\n    dates.forEach((key, i) => result[key] = values[i]);\n    results.push(result);\n  }\n\n  return [results, orgs];\n}\n\n\nfunction addDays(date, days) {\n  var result = new Date(date);\n  result.setDate(result.getDate() + days);\n  return result;\n}\n\n\nexport const getDates = () => {\n  var current = new Date(2020, 2, 28);\n  var end = new Date();\n  var dateArray = [];\n  while (current <= end) {\n      dateArray.push(new Date(current).toISOString().slice(0,10));\n      current = addDays(current, 1);\n  }\n  return dateArray;\n}\n\nexport const clamp = (a, b, c) => { \n  return Math.max(a, Math.min(b, c)) \n}\n\nexport const formatValue = (value) => {\n  return value.toLocaleString(\"en\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\nexport const callout = (g, value) => {\n  if (!value) return g.style(\"display\", \"none\");\n\n  g\n      .style(\"display\", null)\n      .style(\"pointer-events\", \"none\")\n      .style(\"font\", \"10px sans-serif\");\n\n  const path = g.selectAll(\"path\")\n    .data([null])\n    .join(\"path\")\n      .attr(\"fill\", \"white\")\n      .attr(\"stroke\", \"black\");\n\n  const text = g.selectAll(\"text\")\n    .data([null])\n    .join(\"text\")\n    .call(text => text\n      .selectAll(\"tspan\")\n      .data((value + \"\").split(/\\n/))\n      .join(\"tspan\")\n        .attr(\"x\", 0)\n        .attr(\"y\", (d, i) => `${i * 1.1}em`)\n        .style(\"font-weight\", (_, i) => i ? null : \"bold\")\n        .text(d => d));\n\n  const {x, y, width: w, height: h} = text.node().getBBox();\n\n  text.attr(\"transform\", `translate(${-w / 2},${15 - y})`);\n  path.attr(\"d\", `M${-w / 2 - 10},5H-5l5,-5l5,5H${w / 2 + 10}v${h + 20}h-${w + 20}z`);\n}\n\nexport const sortDictByDate = (data) => {\n  var sortedDict = {};\n  const sortedDates = Object.keys(data).sort((a, b) => new Date(a) - new Date(b));\n  sortedDates.map(d => {\n    const dateObj = d3.timeParse(\"%Y-%m-%d\")(d);\n    sortedDict[dateObj] = data[d]\n  })\n  return sortedDict;\n}\n//pass in list of string dates, return string dates y-m-d\nexport const sortStringDates = (data) => {\n  var sortedDates = data.sort((a, b) => new Date(a) - new Date(b));\n  sortedDates = sortedDates.map(d => d3.timeParse(\"%Y-%m-%d\")(d));\n  return sortedDates;\n}\n\nexport const getMostRecentPrediction = (data) => {\n  const sortedDates = Object.keys(data).sort((a, b) => new Date(b) - new Date(a));\n  const mostRecentDate = sortedDates[0];\n  return data[mostRecentDate]\n}\n\nexport const reformatData = (data) => {\n  return Object.keys(data).map(key => ({\n    date: d3.timeParse(\"%Y-%m-%d\")(key),\n    value: data[key]\n}));\n}\n\nexport const reformatPredData = (data) => {\n  return data.map(d => ({\n      date: d3.timeParse(\"%Y-%m-%d\")((d.date).substring(0,10)),\n      value: d.value,\n      defined: d.defined\n      })\n  );\n}\n//returns y coordinate at given x \n/*export const findYatX = (x, path) => {\n  if (x > path.getTotalLength()) {return null}\n  const getXY = (len) => {\n      var point = path.getPointAtLength(len);\n      return [point.x, point.y];\n  }\n  var start = 0;\n  var end = path.getTotalLength();\n  var result = 0;\n  while (start < end) { \n    var mid = (start + end) / 2;\n    var currPoint = getXY(mid);\n    var currPointX = currPoint[0];\n    if (x < currPointX) {\n      end = mid - 0.01; //does it have to be 0.01?\n    }\n    else if (x > currPointX) {\n      start = mid + 0.01;\n    }\n    else {\n      console.log(currPointX);\n      result = currPoint[1];\n      break;\n    }\n  }\n  if (result == 0) {\n    console.log(start, end);\n    return getXY(start)[1];\n  }\n  return result;\n}*/\n\nexport const findYatX = (x, path, startX) => {\n  const getXY = (len) => {\n      var point = path.getPointAtLength(len);\n      return [point.x, point.y, len];\n  }\n  var start = startX;\n  var end = path.getTotalLength();\n  var result = 0;\n  while (start < end) { \n    var mid = (start + end) / 2;\n    var currPoint = getXY(mid);\n    var currPointX = currPoint[0];\n    if (x < currPointX) {\n      end = mid - 0.001; //does it have to be 0.01?\n    }\n    else if (x > currPointX) {\n      start = mid + 0.001;\n    }\n    else {\n      result = currPoint;\n      break;\n    }\n  }\n  if (result == 0) {\n    result = getXY(start);\n  }\n  return result;\n}\n\n//for confirmedData, forecastData, aggregateData\nexport const getAllDataPoints = (pathNode, xAxis, yAxis, startDate, endDate) => {\n  var data = [];\n  var date = startDate;\n  var startX = 0;\n  while (+date <= +endDate) {\n    var x = xAxis(date);\n    var point = findYatX(x, pathNode, startX);\n    data.push({\n      date: date,\n      value: yAxis.invert(point[1])\n    });\n    startX = point[2];\n    date = d3.timeDay.offset(date, 1);\n  }\n  return data;\n}\nexport const getDataPointsFromPath = (predictionData, pathNode, xAxis, yAxis, lastPredDate) => {\n  var date = predictionData[0].date;\n  var startX = 0;\n  for (var i = 0; i < predictionData.length; i++) {\n    if (+predictionData[i].date > +lastPredDate) {\n      break;\n    }\n    if (predictionData[i].defined == 0) {\n      date = predictionData[i].date;\n      var point = findYatX(xAxis(date), pathNode, startX);\n      predictionData[i].defined = true;\n      predictionData[i].value = yAxis.invert(point[1]);\n      startX = point[2];\n    }\n  }\n  return predictionData;\n}"]},"metadata":{},"sourceType":"module"}