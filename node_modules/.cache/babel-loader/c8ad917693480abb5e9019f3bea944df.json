{"ast":null,"code":"var _jsxFileName = \"/Users/sarah/Documents/Sarah/Projects/reu/covid19-forecasting-market/frontend/src/components/ModelsChart/index.js\";\nimport React from 'react';\nimport Chart from 'chart.js';\nimport 'chartjs-plugin-dragdata';\nimport 'chartjs-plugin-zoom';\nimport { getDates } from '../../utils/data';\n\nclass ModelsChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.renderChart();\n  }\n\n  renderChart() {\n    const {\n      data,\n      orgs\n    } = this.props;\n    var options = {\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      },\n      title: {\n        display: true,\n        text: 'All Model Forecasts',\n        fontSize: 30\n      },\n      spanGaps: true\n    };\n    const dates = getDates();\n    var datasets = []; // Set colors for each organization\n\n    var colors = {\n      'Columbia': 'rgba(172, 204, 230, 0.2)',\n      'Georgia Tech': 'rgba(179, 163, 105, 0.2)',\n      'UCLA': 'rgba(39, 116, 174, 0.2)',\n      'IHME': 'rgba(87, 175, 85, 0.2)',\n      'Youyang Gu': 'rgba(196, 129, 14, 0.2)'\n    };\n\n    for (var i = 0; i < data.length; i++) {\n      const modelDates = Object.keys(data[i]);\n\n      for (var j = 0; j < dates.length; j++) {\n        if (modelDates.includes(dates[j]) == false) {\n          data[i][dates[j]] = null;\n        }\n      } // Sort key-value pairs by key (dates)\n\n\n      var keys = Object.keys(data[i]);\n      var newDict = {};\n      keys.sort();\n\n      for (var k = 0; k < keys.length; k++) {\n        var key = keys[k];\n        var value = data[i][key];\n        newDict[key] = value;\n      }\n\n      data[i] = newDict; // Add each models data to datasets\n\n      datasets.push({\n        label: orgs[i],\n        data: Object.values(data[i]),\n        borderColor: colors[orgs[i]],\n        borderWidth: 3,\n        fill: false,\n        rotation: 45,\n        pointBackgroundColor: colors[orgs[i]],\n        pointRadius: 4,\n        pointBorderWidth: 1,\n        pointHoverRadius: 7,\n        pointHoverBorderColor: 'black'\n      });\n    } // Create chart with all models\n\n\n    this.myChart = new Chart(this.chartRef.current, {\n      type: 'line',\n      data: {\n        labels: dates,\n        datasets: datasets\n      },\n      options: options\n    });\n  }\n\n  render() {\n    const {\n      data,\n      orgs\n    } = this.props;\n    if (!data || !orgs) return 'Loading...';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chart-container\",\n      style: {\n        position: \"relative\",\n        width: \"80vw\",\n        margin: \"0 10%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: this.chartRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default ModelsChart;","map":{"version":3,"sources":["/Users/sarah/Documents/Sarah/Projects/reu/covid19-forecasting-market/frontend/src/components/ModelsChart/index.js"],"names":["React","Chart","getDates","ModelsChart","Component","constructor","props","chartRef","createRef","componentDidMount","renderChart","data","orgs","options","scales","yAxes","ticks","beginAtZero","title","display","text","fontSize","spanGaps","dates","datasets","colors","i","length","modelDates","Object","keys","j","includes","newDict","sort","k","key","value","push","label","values","borderColor","borderWidth","fill","rotation","pointBackgroundColor","pointRadius","pointBorderWidth","pointHoverRadius","pointHoverBorderColor","myChart","current","type","labels","render","position","width","margin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Chart from 'chart.js';\nimport 'chartjs-plugin-dragdata';\nimport 'chartjs-plugin-zoom';\nimport { getDates } from '../../utils/data'\n\n\nclass ModelsChart extends React.Component {\n    constructor(props) {\n      super(props);\n      this.chartRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.renderChart();\n    }\n  \n    renderChart() {\n      const { data, orgs } = this.props;\n\n      var options = {\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }],\n        },\n        title: {\n          display: true,\n          text: 'All Model Forecasts',\n          fontSize: 30\n        },\n        spanGaps: true\n      };\n\n      const dates = getDates();  \n      var datasets = [];\n      // Set colors for each organization\n      var colors = {\n        'Columbia': 'rgba(172, 204, 230, 0.2)',\n        'Georgia Tech': 'rgba(179, 163, 105, 0.2)',\n        'UCLA': 'rgba(39, 116, 174, 0.2)',\n        'IHME': 'rgba(87, 175, 85, 0.2)',\n        'Youyang Gu': 'rgba(196, 129, 14, 0.2)'\n      }\n\n      for (var i = 0; i < data.length; i++) {\n        const modelDates = Object.keys(data[i]);\n        for (var j = 0; j < dates.length; j++) {\n            if (modelDates.includes(dates[j]) == false) {\n                data[i][dates[j]] = null;\n            }\n        }\n\n        // Sort key-value pairs by key (dates)\n        var keys = Object.keys(data[i]);\n        var newDict = {}; \n        keys.sort(); \n        for (var k = 0; k < keys.length; k++) {\n            var key = keys[k];\n            var value = data[i][key];\n            newDict[key] = value;\n        } \n        data[i] = newDict;\n\n        // Add each models data to datasets\n        datasets.push({\n          label: orgs[i],\n          data: Object.values(data[i]),\n          borderColor: colors[orgs[i]],\n          borderWidth: 3,\n          fill: false,\n          rotation: 45,\n          pointBackgroundColor: colors[orgs[i]],\n          pointRadius: 4,\n          pointBorderWidth: 1,\n          pointHoverRadius: 7,\n          pointHoverBorderColor: 'black'\n        })\n      }\n  \n      // Create chart with all models\n      this.myChart = new Chart(this.chartRef.current, {\n        type: 'line',\n        data: {\n          labels: dates,\n          datasets: datasets\n        },\n        options: options\n      });\n  \n    }\n  \n    render() {\n        const { data, orgs } = this.props;\n        if (!data || !orgs) return 'Loading...';\n\n        return (\n            <div className=\"chart-container\" style={{position: \"relative\", width: \"80vw\", margin: \"0 10%\"}}>\n                <canvas ref={this.chartRef} />\n            </div>\n        );\n    }\n  }\n\n  export default ModelsChart;"]},"metadata":{},"sourceType":"module"}