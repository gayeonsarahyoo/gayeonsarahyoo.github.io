{"ast":null,"code":"var _jsxFileName = \"/Users/sarah/Documents/Sarah/Projects/reu/gayeonsarahyoo.github.io/src/components/Mapportal/index.js\";\nimport React from \"react\";\nimport L from \"leaflet\";\nimport statesData from './us-states.json';\nimport countriesData from './countries.json'; //import './map.css'\n\nconst style = {\n  width: \"100%\",\n  height: \"600px\"\n};\n\nconst mapStyle = feature => {\n  return {\n    weight: 2,\n    opacity: 1,\n    color: \"white\",\n    dashArray: \"3\",\n    fillOpacity: 0.7,\n    fillColor: \"#FFEDA0\"\n  };\n};\n\nclass Mapportal extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onEachFeature = (feature, layer) => {\n      layer.bindTooltip(feature.properties.name.toString(), {\n        noHide: true\n      }).openTooltip();\n      layer.on({\n        mouseover: this.highlightFeature,\n        mouseout: this.resetHighlight\n      });\n      layer.on(\"click\", function (e) {\n        // this gets the id for each country, and we can use that to redirect to different pages since each \n        // json layer has different ids. the states are 1-50, and the countries are their official code\n        window.alert(layer.feature.id);\n      });\n    };\n\n    this.highlightFeature = e => {\n      var layer = e.target;\n      layer.setStyle({\n        fillColor: \"#FFEDA0\",\n        weight: 5,\n        color: \"#666\",\n        dashArray: \"\",\n        fillOpacity: 0.7\n      });\n\n      if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {\n        layer.bringToFront();\n      } //layer.bringToFront();\n\n    };\n\n    this.resetHighlight = event => {\n      this.geojson.resetStyle(event.target);\n      this.countries.resetStyle(event.target);\n    };\n  }\n\n  componentDidMount() {\n    // create map\n    this.map = L.map(\"map\", {\n      center: [37.8, -96],\n      zoom: 4,\n      layers: [L.tileLayer(\"https://api.mapbox.com/styles/v1/mapbox/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoicmFjaGVsb21ib2siLCJhIjoiY2tjODZ6c3UzMTh3ZTJyb2JndHN0dXhlOSJ9.h8aubFClamI3kiUsjIgNTg\", {\n        maxZoom: 18,\n        attribution: 'Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors, <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"http://mapbox.com\">Mapbox</a>',\n        id: \"dark-v10\"\n      })]\n    });\n    this.geojson = L.geoJson(statesData, {\n      style: mapStyle,\n      onEachFeature: this.onEachFeature\n    }).addTo(this.map);\n    this.countries = L.geoJson(countriesData, {\n      style: mapStyle,\n      onEachFeature: this.onEachFeature\n    }).addTo(this.map);\n    var overlay = {\n      \"Countries\": this.countries,\n      \"States\": this.geojson\n    };\n    L.control.layers(overlay).addTo(this.map); // add layer\n\n    this.layer = L.layerGroup().addTo(this.map);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"map\",\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\nexport default Mapportal;","map":{"version":3,"sources":["/Users/sarah/Documents/Sarah/Projects/reu/gayeonsarahyoo.github.io/src/components/Mapportal/index.js"],"names":["React","L","statesData","countriesData","style","width","height","mapStyle","feature","weight","opacity","color","dashArray","fillOpacity","fillColor","Mapportal","Component","onEachFeature","layer","bindTooltip","properties","name","toString","noHide","openTooltip","on","mouseover","highlightFeature","mouseout","resetHighlight","e","window","alert","id","target","setStyle","Browser","ie","opera","edge","bringToFront","event","geojson","resetStyle","countries","componentDidMount","map","center","zoom","layers","tileLayer","maxZoom","attribution","geoJson","addTo","overlay","control","layerGroup","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport L from \"leaflet\";\nimport statesData from './us-states.json';\nimport countriesData from './countries.json';\n//import './map.css'\n\nconst style = {\n  width: \"100%\",\n  height: \"600px\"\n};\n\nconst mapStyle = (feature) => {\n  return ({\n    weight: 2,\n    opacity: 1,\n    color: \"white\",\n    dashArray: \"3\",\n    fillOpacity: 0.7,\n    fillColor: \"#FFEDA0\"\n\n  });\n}\n\nclass Mapportal extends React.Component {\n  componentDidMount() {\n    // create map\n    this.map = L.map(\"map\", {\n      center: [37.8, -96],\n      zoom: 4,\n      layers: [\n        L.tileLayer(\"https://api.mapbox.com/styles/v1/mapbox/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoicmFjaGVsb21ib2siLCJhIjoiY2tjODZ6c3UzMTh3ZTJyb2JndHN0dXhlOSJ9.h8aubFClamI3kiUsjIgNTg\",\n        {\n          maxZoom: 18,\n          attribution:\n            'Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors, <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"http://mapbox.com\">Mapbox</a>',\n          id: \"dark-v10\"\n        })\n      ]\n    });\n\n    this.geojson = L.geoJson(statesData, {\n      style: mapStyle,\n      onEachFeature: this.onEachFeature\n    }).addTo(this.map);\n\n    this.countries = L.geoJson(countriesData, {\n\t\tstyle: mapStyle,\n\t\tonEachFeature: this.onEachFeature\n    }).addTo(this.map);\n    \n    var overlay = {\n\t\t\t\"Countries\": this.countries,\n\t\t\t\"States\" : this.geojson\n\t};\n  L.control.layers(overlay).addTo(this.map);\n\n\n    // add layer\n    this.layer = L.layerGroup().addTo(this.map);\n  }\n  onEachFeature = (feature, layer) => {\n\tlayer.bindTooltip(feature.properties.name.toString(),{noHide:true}).openTooltip();\n    layer.on({\n      mouseover: this.highlightFeature,\n      mouseout: this.resetHighlight\n    });\n    layer.on(\"click\",function(e){\n      // this gets the id for each country, and we can use that to redirect to different pages since each \n      // json layer has different ids. the states are 1-50, and the countries are their official code\n      window.alert(layer.feature.id);\n  });\n  }\n  highlightFeature = (e) => {\n    var layer = e.target;\n\n    layer.setStyle({\n      fillColor: \"#FFEDA0\",\n      weight: 5,\n      color: \"#666\",\n      dashArray: \"\",\n      fillOpacity: 0.7\n    });\n\n    if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {\n      layer.bringToFront();\n    }\n    //layer.bringToFront();\n\n  \n  }\n  resetHighlight = (event) => {\n\tthis.geojson.resetStyle(event.target);\n\tthis.countries.resetStyle(event.target);\n  }\n\n  render() {\n    return <div id=\"map\" style={style} />;\n  }\n}\n\nexport default Mapportal;\n"]},"metadata":{},"sourceType":"module"}