{"ast":null,"code":"import _slicedToArray from\"/Users/sarah/Documents/Sarah/Projects/reu/gayeonsarahyoo.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"/Users/sarah/Documents/Sarah/Projects/reu/gayeonsarahyoo.github.io/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/sarah/Documents/Sarah/Projects/reu/gayeonsarahyoo.github.io/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/sarah/Documents/Sarah/Projects/reu/gayeonsarahyoo.github.io/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/sarah/Documents/Sarah/Projects/reu/gayeonsarahyoo.github.io/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import LineChart from'../../components/LineChart';import ModelsChart from'../../components/ModelsChart';import{cleanConfirmedData,organizeData}from'../../utils/data';function LineCharts(_ref){var dataSet=_ref.dataSet,orgs=_ref.orgs,userPrediction=_ref.userPrediction,confirmed=_ref.confirmed;return dataSet.map(function(data,index){return/*#__PURE__*/React.createElement(LineChart,{data:data,org:orgs[index],userPrediction:userPrediction,confirmed:confirmed});});}var newDeathsContainer=/*#__PURE__*/function(_React$Component){_inherits(newDeathsContainer,_React$Component);var _super=_createSuper(newDeathsContainer);function newDeathsContainer(props){var _this;_classCallCheck(this,newDeathsContainer);_this=_super.call(this,props);_this.state={data:null,orgs:null,confirmed:null,userPrediction:null,aggregate:null};return _this;}_createClass(newDeathsContainer,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;fetch('/us-inc-deaths-forecasts').then(function(res){return res.json();}).then(function(data){var _organizeData=organizeData(data),_organizeData2=_slicedToArray(_organizeData,2),results=_organizeData2[0],orgs=_organizeData2[1];_this2.setState({data:results,orgs:orgs});});fetch('/user-prediction').then(function(res){return res.json();}).then(function(data){_this2.setState({userPrediction:data});});fetch('/us-inc-deaths-confirmed').then(function(res){return res.json();}).then(function(data){_this2.setState({confirmed:data});});fetch('/us-agg-inc-deaths').then(function(res){return res.json();}).then(function(data){_this2.setState({aggregate:data});});}},{key:\"render\",value:function render(){var _this$state=this.state,data=_this$state.data,orgs=_this$state.orgs,userPrediction=_this$state.userPrediction,confirmed=_this$state.confirmed,aggregate=_this$state.aggregate;if(!data||!orgs||!userPrediction||!confirmed||!aggregate)return'Loading...';return/*#__PURE__*/React.createElement(\"div\",{className:\"chartContainer\"},/*#__PURE__*/React.createElement(LineCharts,{dataSet:data,orgs:orgs,userPrediction:userPrediction,confirmed:confirmed}),/*#__PURE__*/React.createElement(ModelsChart,{data:data,orgs:orgs,confirmed:confirmed,aggregate:aggregate}));}}]);return newDeathsContainer;}(React.Component);export default newDeathsContainer;","map":{"version":3,"sources":["/Users/sarah/Documents/Sarah/Projects/reu/gayeonsarahyoo.github.io/src/containers/newDeathsContainer/index.js"],"names":["React","LineChart","ModelsChart","cleanConfirmedData","organizeData","LineCharts","dataSet","orgs","userPrediction","confirmed","map","data","index","newDeathsContainer","props","state","aggregate","fetch","then","res","json","results","setState","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport LineChart from '../../components/LineChart';\nimport ModelsChart from '../../components/ModelsChart';\nimport { cleanConfirmedData, organizeData } from '../../utils/data';\n\nfunction LineCharts({ dataSet, orgs, userPrediction, confirmed }) {\n  return dataSet.map((data, index) => {\n    return (\n      <LineChart data={data} org={orgs[index]} userPrediction={userPrediction} confirmed={confirmed} />\n     );\n  })\n}\n\nclass newDeathsContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      orgs: null,\n      confirmed: null,\n      userPrediction: null,\n      aggregate: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('/us-inc-deaths-forecasts').then(res => res.json()).then(data => {\n      const [results, orgs] = organizeData(data);\n      this.setState({ data: results, orgs });\n    });\n    fetch('/user-prediction').then(res => res.json()).then(data => {\n      this.setState({ userPrediction: data });\n    });\n    fetch('/us-inc-deaths-confirmed').then(res => res.json()).then(data => {\n      this.setState({ confirmed: data });\n    });\n    fetch('/us-agg-inc-deaths').then(res => res.json()).then(data => {\n      this.setState({ aggregate: data });\n    });\n  }\n\n  render() {\n    const { data, orgs, userPrediction, confirmed, aggregate } = this.state;\n\n    if (!data || !orgs || !userPrediction || !confirmed || !aggregate) return 'Loading...';\n\n    return (\n      <div className=\"chartContainer\">\n        <LineCharts\n          dataSet={data}\n          orgs={orgs}\n          userPrediction={userPrediction}\n          confirmed={confirmed}\n        />\n        <ModelsChart \n          data={data} \n          orgs={orgs}\n          confirmed={confirmed} \n          aggregate={aggregate}\n        />\n      </div>\n    );\n  }\n}\n\nexport default newDeathsContainer;\n"]},"metadata":{},"sourceType":"module"}